# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from rcc.configuration import Configuration


class SiteRpc(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'tenant_id': 'int',
        'parent_site_id': 'int',
        'name': 'str',
        'site_id': 'str',
        'time_zone_id': 'int',
        'site_type_id': 'int',
        'enabled': 'bool',
        'opened': 'bool',
        'locale': 'str',
        'summary': 'str',
        'facility_name': 'str',
        'facility_city': 'str',
        'facility_state': 'str',
        'facility_zip': 'str',
        'facility_country': 'str',
        'facility_contact_name': 'str',
        'facility_contact_degree': 'str',
        'facility_phone': 'str',
        'facility_email': 'str',
        'children': 'list[SiteRpc]',
        'site_type_label': 'str',
        'parent_site_name': 'str',
        'time_zone_name': 'str',
        'parent_id': 'int',
        'caption': 'str'
    }

    attribute_map = {
        'id': 'id',
        'tenant_id': 'tenantId',
        'parent_site_id': 'parentSiteId',
        'name': 'name',
        'site_id': 'siteId',
        'time_zone_id': 'timeZoneId',
        'site_type_id': 'siteTypeId',
        'enabled': 'enabled',
        'opened': 'opened',
        'locale': 'locale',
        'summary': 'summary',
        'facility_name': 'facilityName',
        'facility_city': 'facilityCity',
        'facility_state': 'facilityState',
        'facility_zip': 'facilityZip',
        'facility_country': 'facilityCountry',
        'facility_contact_name': 'facilityContactName',
        'facility_contact_degree': 'facilityContactDegree',
        'facility_phone': 'facilityPhone',
        'facility_email': 'facilityEmail',
        'children': 'children',
        'site_type_label': 'siteTypeLabel',
        'parent_site_name': 'parentSiteName',
        'time_zone_name': 'timeZoneName',
        'parent_id': 'parentId',
        'caption': 'caption'
    }

    def __init__(self, id=None, tenant_id=None, parent_site_id=None, name=None, site_id=None, time_zone_id=None, site_type_id=None, enabled=None, opened=None, locale=None, summary=None, facility_name=None, facility_city=None, facility_state=None, facility_zip=None, facility_country=None, facility_contact_name=None, facility_contact_degree=None, facility_phone=None, facility_email=None, children=None, site_type_label=None, parent_site_name=None, time_zone_name=None, parent_id=None, caption=None, local_vars_configuration=None):  # noqa: E501
        """SiteRpc - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._tenant_id = None
        self._parent_site_id = None
        self._name = None
        self._site_id = None
        self._time_zone_id = None
        self._site_type_id = None
        self._enabled = None
        self._opened = None
        self._locale = None
        self._summary = None
        self._facility_name = None
        self._facility_city = None
        self._facility_state = None
        self._facility_zip = None
        self._facility_country = None
        self._facility_contact_name = None
        self._facility_contact_degree = None
        self._facility_phone = None
        self._facility_email = None
        self._children = None
        self._site_type_label = None
        self._parent_site_name = None
        self._time_zone_name = None
        self._parent_id = None
        self._caption = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if tenant_id is not None:
            self.tenant_id = tenant_id
        if parent_site_id is not None:
            self.parent_site_id = parent_site_id
        if name is not None:
            self.name = name
        if site_id is not None:
            self.site_id = site_id
        if time_zone_id is not None:
            self.time_zone_id = time_zone_id
        if site_type_id is not None:
            self.site_type_id = site_type_id
        if enabled is not None:
            self.enabled = enabled
        if opened is not None:
            self.opened = opened
        if locale is not None:
            self.locale = locale
        if summary is not None:
            self.summary = summary
        if facility_name is not None:
            self.facility_name = facility_name
        if facility_city is not None:
            self.facility_city = facility_city
        if facility_state is not None:
            self.facility_state = facility_state
        if facility_zip is not None:
            self.facility_zip = facility_zip
        if facility_country is not None:
            self.facility_country = facility_country
        if facility_contact_name is not None:
            self.facility_contact_name = facility_contact_name
        if facility_contact_degree is not None:
            self.facility_contact_degree = facility_contact_degree
        if facility_phone is not None:
            self.facility_phone = facility_phone
        if facility_email is not None:
            self.facility_email = facility_email
        if children is not None:
            self.children = children
        if site_type_label is not None:
            self.site_type_label = site_type_label
        if parent_site_name is not None:
            self.parent_site_name = parent_site_name
        if time_zone_name is not None:
            self.time_zone_name = time_zone_name
        if parent_id is not None:
            self.parent_id = parent_id
        if caption is not None:
            self.caption = caption

    @property
    def id(self):
        """Gets the id of this SiteRpc.  # noqa: E501


        :return: The id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SiteRpc.


        :param id: The id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this SiteRpc.  # noqa: E501


        :return: The tenant_id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this SiteRpc.


        :param tenant_id: The tenant_id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._tenant_id = tenant_id

    @property
    def parent_site_id(self):
        """Gets the parent_site_id of this SiteRpc.  # noqa: E501


        :return: The parent_site_id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._parent_site_id

    @parent_site_id.setter
    def parent_site_id(self, parent_site_id):
        """Sets the parent_site_id of this SiteRpc.


        :param parent_site_id: The parent_site_id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._parent_site_id = parent_site_id

    @property
    def name(self):
        """Gets the name of this SiteRpc.  # noqa: E501


        :return: The name of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SiteRpc.


        :param name: The name of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def site_id(self):
        """Gets the site_id of this SiteRpc.  # noqa: E501


        :return: The site_id of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this SiteRpc.


        :param site_id: The site_id of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._site_id = site_id

    @property
    def time_zone_id(self):
        """Gets the time_zone_id of this SiteRpc.  # noqa: E501


        :return: The time_zone_id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._time_zone_id

    @time_zone_id.setter
    def time_zone_id(self, time_zone_id):
        """Sets the time_zone_id of this SiteRpc.


        :param time_zone_id: The time_zone_id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._time_zone_id = time_zone_id

    @property
    def site_type_id(self):
        """Gets the site_type_id of this SiteRpc.  # noqa: E501


        :return: The site_type_id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._site_type_id

    @site_type_id.setter
    def site_type_id(self, site_type_id):
        """Sets the site_type_id of this SiteRpc.


        :param site_type_id: The site_type_id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._site_type_id = site_type_id

    @property
    def enabled(self):
        """Gets the enabled of this SiteRpc.  # noqa: E501


        :return: The enabled of this SiteRpc.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this SiteRpc.


        :param enabled: The enabled of this SiteRpc.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def opened(self):
        """Gets the opened of this SiteRpc.  # noqa: E501


        :return: The opened of this SiteRpc.  # noqa: E501
        :rtype: bool
        """
        return self._opened

    @opened.setter
    def opened(self, opened):
        """Sets the opened of this SiteRpc.


        :param opened: The opened of this SiteRpc.  # noqa: E501
        :type: bool
        """

        self._opened = opened

    @property
    def locale(self):
        """Gets the locale of this SiteRpc.  # noqa: E501


        :return: The locale of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this SiteRpc.


        :param locale: The locale of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def summary(self):
        """Gets the summary of this SiteRpc.  # noqa: E501


        :return: The summary of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this SiteRpc.


        :param summary: The summary of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def facility_name(self):
        """Gets the facility_name of this SiteRpc.  # noqa: E501


        :return: The facility_name of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_name

    @facility_name.setter
    def facility_name(self, facility_name):
        """Sets the facility_name of this SiteRpc.


        :param facility_name: The facility_name of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_name = facility_name

    @property
    def facility_city(self):
        """Gets the facility_city of this SiteRpc.  # noqa: E501


        :return: The facility_city of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_city

    @facility_city.setter
    def facility_city(self, facility_city):
        """Sets the facility_city of this SiteRpc.


        :param facility_city: The facility_city of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_city = facility_city

    @property
    def facility_state(self):
        """Gets the facility_state of this SiteRpc.  # noqa: E501


        :return: The facility_state of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_state

    @facility_state.setter
    def facility_state(self, facility_state):
        """Sets the facility_state of this SiteRpc.


        :param facility_state: The facility_state of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_state = facility_state

    @property
    def facility_zip(self):
        """Gets the facility_zip of this SiteRpc.  # noqa: E501


        :return: The facility_zip of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_zip

    @facility_zip.setter
    def facility_zip(self, facility_zip):
        """Sets the facility_zip of this SiteRpc.


        :param facility_zip: The facility_zip of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_zip = facility_zip

    @property
    def facility_country(self):
        """Gets the facility_country of this SiteRpc.  # noqa: E501


        :return: The facility_country of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_country

    @facility_country.setter
    def facility_country(self, facility_country):
        """Sets the facility_country of this SiteRpc.


        :param facility_country: The facility_country of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_country = facility_country

    @property
    def facility_contact_name(self):
        """Gets the facility_contact_name of this SiteRpc.  # noqa: E501


        :return: The facility_contact_name of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_contact_name

    @facility_contact_name.setter
    def facility_contact_name(self, facility_contact_name):
        """Sets the facility_contact_name of this SiteRpc.


        :param facility_contact_name: The facility_contact_name of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_contact_name = facility_contact_name

    @property
    def facility_contact_degree(self):
        """Gets the facility_contact_degree of this SiteRpc.  # noqa: E501


        :return: The facility_contact_degree of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_contact_degree

    @facility_contact_degree.setter
    def facility_contact_degree(self, facility_contact_degree):
        """Sets the facility_contact_degree of this SiteRpc.


        :param facility_contact_degree: The facility_contact_degree of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_contact_degree = facility_contact_degree

    @property
    def facility_phone(self):
        """Gets the facility_phone of this SiteRpc.  # noqa: E501


        :return: The facility_phone of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_phone

    @facility_phone.setter
    def facility_phone(self, facility_phone):
        """Sets the facility_phone of this SiteRpc.


        :param facility_phone: The facility_phone of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_phone = facility_phone

    @property
    def facility_email(self):
        """Gets the facility_email of this SiteRpc.  # noqa: E501


        :return: The facility_email of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._facility_email

    @facility_email.setter
    def facility_email(self, facility_email):
        """Sets the facility_email of this SiteRpc.


        :param facility_email: The facility_email of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._facility_email = facility_email

    @property
    def children(self):
        """Gets the children of this SiteRpc.  # noqa: E501


        :return: The children of this SiteRpc.  # noqa: E501
        :rtype: list[SiteRpc]
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this SiteRpc.


        :param children: The children of this SiteRpc.  # noqa: E501
        :type: list[SiteRpc]
        """

        self._children = children

    @property
    def site_type_label(self):
        """Gets the site_type_label of this SiteRpc.  # noqa: E501


        :return: The site_type_label of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._site_type_label

    @site_type_label.setter
    def site_type_label(self, site_type_label):
        """Sets the site_type_label of this SiteRpc.


        :param site_type_label: The site_type_label of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._site_type_label = site_type_label

    @property
    def parent_site_name(self):
        """Gets the parent_site_name of this SiteRpc.  # noqa: E501


        :return: The parent_site_name of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._parent_site_name

    @parent_site_name.setter
    def parent_site_name(self, parent_site_name):
        """Sets the parent_site_name of this SiteRpc.


        :param parent_site_name: The parent_site_name of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._parent_site_name = parent_site_name

    @property
    def time_zone_name(self):
        """Gets the time_zone_name of this SiteRpc.  # noqa: E501


        :return: The time_zone_name of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._time_zone_name

    @time_zone_name.setter
    def time_zone_name(self, time_zone_name):
        """Sets the time_zone_name of this SiteRpc.


        :param time_zone_name: The time_zone_name of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._time_zone_name = time_zone_name

    @property
    def parent_id(self):
        """Gets the parent_id of this SiteRpc.  # noqa: E501


        :return: The parent_id of this SiteRpc.  # noqa: E501
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this SiteRpc.


        :param parent_id: The parent_id of this SiteRpc.  # noqa: E501
        :type: int
        """

        self._parent_id = parent_id

    @property
    def caption(self):
        """Gets the caption of this SiteRpc.  # noqa: E501


        :return: The caption of this SiteRpc.  # noqa: E501
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this SiteRpc.


        :param caption: The caption of this SiteRpc.  # noqa: E501
        :type: str
        """

        self._caption = caption

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteRpc):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SiteRpc):
            return True

        return self.to_dict() != other.to_dict()
