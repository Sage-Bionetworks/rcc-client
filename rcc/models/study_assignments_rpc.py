# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from rcc.configuration import Configuration


class StudyAssignmentsRpc(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'user_title': 'str',
        'role_id': 'int',
        'role': 'str',
        'site': 'str',
        'user_name': 'str',
        'email': 'str',
        'enabled': 'bool',
        'study_id': 'int',
        'study_name': 'str',
        'study_site_id': 'int',
        'refresh_api_token': 'bool',
        'resend_api_token_to_user_email': 'bool',
        'api_token': 'str',
        'bi_token': 'str',
        'api_export': 'bool',
        'api_import': 'bool',
        'user_id': 'int',
        'job_title_id': 'int',
        'job_title': 'str'
    }

    attribute_map = {
        'id': 'id',
        'user_title': 'userTitle',
        'role_id': 'roleId',
        'role': 'role',
        'site': 'site',
        'user_name': 'userName',
        'email': 'email',
        'enabled': 'enabled',
        'study_id': 'studyId',
        'study_name': 'studyName',
        'study_site_id': 'studySiteId',
        'refresh_api_token': 'refreshAPIToken',
        'resend_api_token_to_user_email': 'resendAPITokenToUserEmail',
        'api_token': 'apiToken',
        'bi_token': 'biToken',
        'api_export': 'apiExport',
        'api_import': 'apiImport',
        'user_id': 'userId',
        'job_title_id': 'jobTitleId',
        'job_title': 'jobTitle'
    }

    def __init__(self, id=None, user_title=None, role_id=None, role=None, site=None, user_name=None, email=None, enabled=None, study_id=None, study_name=None, study_site_id=None, refresh_api_token=None, resend_api_token_to_user_email=None, api_token=None, bi_token=None, api_export=None, api_import=None, user_id=None, job_title_id=None, job_title=None, local_vars_configuration=None):  # noqa: E501
        """StudyAssignmentsRpc - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._user_title = None
        self._role_id = None
        self._role = None
        self._site = None
        self._user_name = None
        self._email = None
        self._enabled = None
        self._study_id = None
        self._study_name = None
        self._study_site_id = None
        self._refresh_api_token = None
        self._resend_api_token_to_user_email = None
        self._api_token = None
        self._bi_token = None
        self._api_export = None
        self._api_import = None
        self._user_id = None
        self._job_title_id = None
        self._job_title = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if user_title is not None:
            self.user_title = user_title
        if role_id is not None:
            self.role_id = role_id
        if role is not None:
            self.role = role
        if site is not None:
            self.site = site
        if user_name is not None:
            self.user_name = user_name
        if email is not None:
            self.email = email
        if enabled is not None:
            self.enabled = enabled
        if study_id is not None:
            self.study_id = study_id
        if study_name is not None:
            self.study_name = study_name
        if study_site_id is not None:
            self.study_site_id = study_site_id
        if refresh_api_token is not None:
            self.refresh_api_token = refresh_api_token
        if resend_api_token_to_user_email is not None:
            self.resend_api_token_to_user_email = resend_api_token_to_user_email
        if api_token is not None:
            self.api_token = api_token
        if bi_token is not None:
            self.bi_token = bi_token
        if api_export is not None:
            self.api_export = api_export
        if api_import is not None:
            self.api_import = api_import
        if user_id is not None:
            self.user_id = user_id
        if job_title_id is not None:
            self.job_title_id = job_title_id
        if job_title is not None:
            self.job_title = job_title

    @property
    def id(self):
        """Gets the id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StudyAssignmentsRpc.


        :param id: The id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def user_title(self):
        """Gets the user_title of this StudyAssignmentsRpc.  # noqa: E501

        User Title  # noqa: E501

        :return: The user_title of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._user_title

    @user_title.setter
    def user_title(self, user_title):
        """Sets the user_title of this StudyAssignmentsRpc.

        User Title  # noqa: E501

        :param user_title: The user_title of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._user_title = user_title

    @property
    def role_id(self):
        """Gets the role_id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The role_id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._role_id

    @role_id.setter
    def role_id(self, role_id):
        """Sets the role_id of this StudyAssignmentsRpc.


        :param role_id: The role_id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._role_id = role_id

    @property
    def role(self):
        """Gets the role of this StudyAssignmentsRpc.  # noqa: E501

        Role Name  # noqa: E501

        :return: The role of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this StudyAssignmentsRpc.

        Role Name  # noqa: E501

        :param role: The role of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._role = role

    @property
    def site(self):
        """Gets the site of this StudyAssignmentsRpc.  # noqa: E501

        Site Name  # noqa: E501

        :return: The site of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._site

    @site.setter
    def site(self, site):
        """Sets the site of this StudyAssignmentsRpc.

        Site Name  # noqa: E501

        :param site: The site of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._site = site

    @property
    def user_name(self):
        """Gets the user_name of this StudyAssignmentsRpc.  # noqa: E501

        User Name  # noqa: E501

        :return: The user_name of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this StudyAssignmentsRpc.

        User Name  # noqa: E501

        :param user_name: The user_name of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def email(self):
        """Gets the email of this StudyAssignmentsRpc.  # noqa: E501

        User Email  # noqa: E501

        :return: The email of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this StudyAssignmentsRpc.

        User Email  # noqa: E501

        :param email: The email of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def enabled(self):
        """Gets the enabled of this StudyAssignmentsRpc.  # noqa: E501


        :return: The enabled of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this StudyAssignmentsRpc.


        :param enabled: The enabled of this StudyAssignmentsRpc.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def study_id(self):
        """Gets the study_id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The study_id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._study_id

    @study_id.setter
    def study_id(self, study_id):
        """Sets the study_id of this StudyAssignmentsRpc.


        :param study_id: The study_id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._study_id = study_id

    @property
    def study_name(self):
        """Gets the study_name of this StudyAssignmentsRpc.  # noqa: E501

        User Email  # noqa: E501

        :return: The study_name of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._study_name

    @study_name.setter
    def study_name(self, study_name):
        """Sets the study_name of this StudyAssignmentsRpc.

        User Email  # noqa: E501

        :param study_name: The study_name of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._study_name = study_name

    @property
    def study_site_id(self):
        """Gets the study_site_id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The study_site_id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._study_site_id

    @study_site_id.setter
    def study_site_id(self, study_site_id):
        """Sets the study_site_id of this StudyAssignmentsRpc.


        :param study_site_id: The study_site_id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._study_site_id = study_site_id

    @property
    def refresh_api_token(self):
        """Gets the refresh_api_token of this StudyAssignmentsRpc.  # noqa: E501

        Flag shows that API token should be refreshed for the user  # noqa: E501

        :return: The refresh_api_token of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: bool
        """
        return self._refresh_api_token

    @refresh_api_token.setter
    def refresh_api_token(self, refresh_api_token):
        """Sets the refresh_api_token of this StudyAssignmentsRpc.

        Flag shows that API token should be refreshed for the user  # noqa: E501

        :param refresh_api_token: The refresh_api_token of this StudyAssignmentsRpc.  # noqa: E501
        :type: bool
        """

        self._refresh_api_token = refresh_api_token

    @property
    def resend_api_token_to_user_email(self):
        """Gets the resend_api_token_to_user_email of this StudyAssignmentsRpc.  # noqa: E501

        Flag shows that API token should be resend to the users email  # noqa: E501

        :return: The resend_api_token_to_user_email of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: bool
        """
        return self._resend_api_token_to_user_email

    @resend_api_token_to_user_email.setter
    def resend_api_token_to_user_email(self, resend_api_token_to_user_email):
        """Sets the resend_api_token_to_user_email of this StudyAssignmentsRpc.

        Flag shows that API token should be resend to the users email  # noqa: E501

        :param resend_api_token_to_user_email: The resend_api_token_to_user_email of this StudyAssignmentsRpc.  # noqa: E501
        :type: bool
        """

        self._resend_api_token_to_user_email = resend_api_token_to_user_email

    @property
    def api_token(self):
        """Gets the api_token of this StudyAssignmentsRpc.  # noqa: E501

        API token for user study  # noqa: E501

        :return: The api_token of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._api_token

    @api_token.setter
    def api_token(self, api_token):
        """Sets the api_token of this StudyAssignmentsRpc.

        API token for user study  # noqa: E501

        :param api_token: The api_token of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._api_token = api_token

    @property
    def bi_token(self):
        """Gets the bi_token of this StudyAssignmentsRpc.  # noqa: E501

        BI token for user study  # noqa: E501

        :return: The bi_token of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._bi_token

    @bi_token.setter
    def bi_token(self, bi_token):
        """Sets the bi_token of this StudyAssignmentsRpc.

        BI token for user study  # noqa: E501

        :param bi_token: The bi_token of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._bi_token = bi_token

    @property
    def api_export(self):
        """Gets the api_export of this StudyAssignmentsRpc.  # noqa: E501


        :return: The api_export of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: bool
        """
        return self._api_export

    @api_export.setter
    def api_export(self, api_export):
        """Sets the api_export of this StudyAssignmentsRpc.


        :param api_export: The api_export of this StudyAssignmentsRpc.  # noqa: E501
        :type: bool
        """

        self._api_export = api_export

    @property
    def api_import(self):
        """Gets the api_import of this StudyAssignmentsRpc.  # noqa: E501


        :return: The api_import of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: bool
        """
        return self._api_import

    @api_import.setter
    def api_import(self, api_import):
        """Sets the api_import of this StudyAssignmentsRpc.


        :param api_import: The api_import of this StudyAssignmentsRpc.  # noqa: E501
        :type: bool
        """

        self._api_import = api_import

    @property
    def user_id(self):
        """Gets the user_id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The user_id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this StudyAssignmentsRpc.


        :param user_id: The user_id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._user_id = user_id

    @property
    def job_title_id(self):
        """Gets the job_title_id of this StudyAssignmentsRpc.  # noqa: E501


        :return: The job_title_id of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: int
        """
        return self._job_title_id

    @job_title_id.setter
    def job_title_id(self, job_title_id):
        """Sets the job_title_id of this StudyAssignmentsRpc.


        :param job_title_id: The job_title_id of this StudyAssignmentsRpc.  # noqa: E501
        :type: int
        """

        self._job_title_id = job_title_id

    @property
    def job_title(self):
        """Gets the job_title of this StudyAssignmentsRpc.  # noqa: E501

        Job title  # noqa: E501

        :return: The job_title of this StudyAssignmentsRpc.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this StudyAssignmentsRpc.

        Job title  # noqa: E501

        :param job_title: The job_title of this StudyAssignmentsRpc.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StudyAssignmentsRpc):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, StudyAssignmentsRpc):
            return True

        return self.to_dict() != other.to_dict()
