# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from rcc.configuration import Configuration


class StudyDictionary(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'study_dictionary_oid': 'str',
        'enable_site_coding': 'bool',
        'enable_auto_coding': 'bool',
        'dictionary_version_oid': 'str',
        'start_date': 'datetime',
        'end_date': 'datetime',
        'version_enabled': 'bool',
        'license_agreement': 'str',
        'lic_agrement_date': 'datetime',
        'lic_verify_date': 'datetime',
        'notes': 'str',
        'dictionary_oid': 'str',
        'dictionary_notes': 'str',
        'dictionary_enabled': 'bool',
        'customer_contact': 'str',
        'dictionary_disabled_verbatim': 'bool',
        'ref_dictionary_version_oid': 'str',
        'ref_dictionary_version_number': 'str',
        'ref_dictionary_version_release_date': 'datetime',
        'ref_dictionary_version_upload_date': 'datetime',
        'ref_dictionary_version_enabled': 'bool',
        'medical_dictionary_version_id': 'int',
        'ref_dictionary_oid': 'str',
        'ref_dictionary_name': 'str',
        'ref_dictionary_description': 'str',
        'ref_dictionary_enabled': 'bool',
        'ref_dictionary_category': 'str',
        'ref_dictionary_contact': 'str',
        'ref_dictionary_web_page': 'str',
        'ref_dictionary_license_info': 'str',
        'ref_dictionary_search_error_message': 'str'
    }

    attribute_map = {
        'study_dictionary_oid': 'studyDictionaryOID',
        'enable_site_coding': 'enableSiteCoding',
        'enable_auto_coding': 'enableAutoCoding',
        'dictionary_version_oid': 'dictionaryVersionOID',
        'start_date': 'startDate',
        'end_date': 'endDate',
        'version_enabled': 'versionEnabled',
        'license_agreement': 'licenseAgreement',
        'lic_agrement_date': 'licAgrementDate',
        'lic_verify_date': 'licVerifyDate',
        'notes': 'notes',
        'dictionary_oid': 'dictionaryOID',
        'dictionary_notes': 'dictionaryNotes',
        'dictionary_enabled': 'dictionaryEnabled',
        'customer_contact': 'customerContact',
        'dictionary_disabled_verbatim': 'dictionaryDisabledVerbatim',
        'ref_dictionary_version_oid': 'refDictionaryVersionOID',
        'ref_dictionary_version_number': 'refDictionaryVersionNumber',
        'ref_dictionary_version_release_date': 'refDictionaryVersionReleaseDate',
        'ref_dictionary_version_upload_date': 'refDictionaryVersionUploadDate',
        'ref_dictionary_version_enabled': 'refDictionaryVersionEnabled',
        'medical_dictionary_version_id': 'medicalDictionaryVersionId',
        'ref_dictionary_oid': 'refDictionaryOID',
        'ref_dictionary_name': 'refDictionaryName',
        'ref_dictionary_description': 'refDictionaryDescription',
        'ref_dictionary_enabled': 'refDictionaryEnabled',
        'ref_dictionary_category': 'refDictionaryCategory',
        'ref_dictionary_contact': 'refDictionaryContact',
        'ref_dictionary_web_page': 'refDictionaryWebPage',
        'ref_dictionary_license_info': 'refDictionaryLicenseInfo',
        'ref_dictionary_search_error_message': 'refDictionarySearchErrorMessage'
    }

    def __init__(self, study_dictionary_oid=None, enable_site_coding=None, enable_auto_coding=None, dictionary_version_oid=None, start_date=None, end_date=None, version_enabled=None, license_agreement=None, lic_agrement_date=None, lic_verify_date=None, notes=None, dictionary_oid=None, dictionary_notes=None, dictionary_enabled=None, customer_contact=None, dictionary_disabled_verbatim=None, ref_dictionary_version_oid=None, ref_dictionary_version_number=None, ref_dictionary_version_release_date=None, ref_dictionary_version_upload_date=None, ref_dictionary_version_enabled=None, medical_dictionary_version_id=None, ref_dictionary_oid=None, ref_dictionary_name=None, ref_dictionary_description=None, ref_dictionary_enabled=None, ref_dictionary_category=None, ref_dictionary_contact=None, ref_dictionary_web_page=None, ref_dictionary_license_info=None, ref_dictionary_search_error_message=None, local_vars_configuration=None):  # noqa: E501
        """StudyDictionary - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._study_dictionary_oid = None
        self._enable_site_coding = None
        self._enable_auto_coding = None
        self._dictionary_version_oid = None
        self._start_date = None
        self._end_date = None
        self._version_enabled = None
        self._license_agreement = None
        self._lic_agrement_date = None
        self._lic_verify_date = None
        self._notes = None
        self._dictionary_oid = None
        self._dictionary_notes = None
        self._dictionary_enabled = None
        self._customer_contact = None
        self._dictionary_disabled_verbatim = None
        self._ref_dictionary_version_oid = None
        self._ref_dictionary_version_number = None
        self._ref_dictionary_version_release_date = None
        self._ref_dictionary_version_upload_date = None
        self._ref_dictionary_version_enabled = None
        self._medical_dictionary_version_id = None
        self._ref_dictionary_oid = None
        self._ref_dictionary_name = None
        self._ref_dictionary_description = None
        self._ref_dictionary_enabled = None
        self._ref_dictionary_category = None
        self._ref_dictionary_contact = None
        self._ref_dictionary_web_page = None
        self._ref_dictionary_license_info = None
        self._ref_dictionary_search_error_message = None
        self.discriminator = None

        if study_dictionary_oid is not None:
            self.study_dictionary_oid = study_dictionary_oid
        if enable_site_coding is not None:
            self.enable_site_coding = enable_site_coding
        if enable_auto_coding is not None:
            self.enable_auto_coding = enable_auto_coding
        if dictionary_version_oid is not None:
            self.dictionary_version_oid = dictionary_version_oid
        if start_date is not None:
            self.start_date = start_date
        if end_date is not None:
            self.end_date = end_date
        if version_enabled is not None:
            self.version_enabled = version_enabled
        if license_agreement is not None:
            self.license_agreement = license_agreement
        if lic_agrement_date is not None:
            self.lic_agrement_date = lic_agrement_date
        if lic_verify_date is not None:
            self.lic_verify_date = lic_verify_date
        if notes is not None:
            self.notes = notes
        if dictionary_oid is not None:
            self.dictionary_oid = dictionary_oid
        if dictionary_notes is not None:
            self.dictionary_notes = dictionary_notes
        if dictionary_enabled is not None:
            self.dictionary_enabled = dictionary_enabled
        if customer_contact is not None:
            self.customer_contact = customer_contact
        if dictionary_disabled_verbatim is not None:
            self.dictionary_disabled_verbatim = dictionary_disabled_verbatim
        if ref_dictionary_version_oid is not None:
            self.ref_dictionary_version_oid = ref_dictionary_version_oid
        if ref_dictionary_version_number is not None:
            self.ref_dictionary_version_number = ref_dictionary_version_number
        if ref_dictionary_version_release_date is not None:
            self.ref_dictionary_version_release_date = ref_dictionary_version_release_date
        if ref_dictionary_version_upload_date is not None:
            self.ref_dictionary_version_upload_date = ref_dictionary_version_upload_date
        if ref_dictionary_version_enabled is not None:
            self.ref_dictionary_version_enabled = ref_dictionary_version_enabled
        if medical_dictionary_version_id is not None:
            self.medical_dictionary_version_id = medical_dictionary_version_id
        if ref_dictionary_oid is not None:
            self.ref_dictionary_oid = ref_dictionary_oid
        if ref_dictionary_name is not None:
            self.ref_dictionary_name = ref_dictionary_name
        if ref_dictionary_description is not None:
            self.ref_dictionary_description = ref_dictionary_description
        if ref_dictionary_enabled is not None:
            self.ref_dictionary_enabled = ref_dictionary_enabled
        if ref_dictionary_category is not None:
            self.ref_dictionary_category = ref_dictionary_category
        if ref_dictionary_contact is not None:
            self.ref_dictionary_contact = ref_dictionary_contact
        if ref_dictionary_web_page is not None:
            self.ref_dictionary_web_page = ref_dictionary_web_page
        if ref_dictionary_license_info is not None:
            self.ref_dictionary_license_info = ref_dictionary_license_info
        if ref_dictionary_search_error_message is not None:
            self.ref_dictionary_search_error_message = ref_dictionary_search_error_message

    @property
    def study_dictionary_oid(self):
        """Gets the study_dictionary_oid of this StudyDictionary.  # noqa: E501


        :return: The study_dictionary_oid of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._study_dictionary_oid

    @study_dictionary_oid.setter
    def study_dictionary_oid(self, study_dictionary_oid):
        """Sets the study_dictionary_oid of this StudyDictionary.


        :param study_dictionary_oid: The study_dictionary_oid of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._study_dictionary_oid = study_dictionary_oid

    @property
    def enable_site_coding(self):
        """Gets the enable_site_coding of this StudyDictionary.  # noqa: E501


        :return: The enable_site_coding of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._enable_site_coding

    @enable_site_coding.setter
    def enable_site_coding(self, enable_site_coding):
        """Sets the enable_site_coding of this StudyDictionary.


        :param enable_site_coding: The enable_site_coding of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._enable_site_coding = enable_site_coding

    @property
    def enable_auto_coding(self):
        """Gets the enable_auto_coding of this StudyDictionary.  # noqa: E501


        :return: The enable_auto_coding of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._enable_auto_coding

    @enable_auto_coding.setter
    def enable_auto_coding(self, enable_auto_coding):
        """Sets the enable_auto_coding of this StudyDictionary.


        :param enable_auto_coding: The enable_auto_coding of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._enable_auto_coding = enable_auto_coding

    @property
    def dictionary_version_oid(self):
        """Gets the dictionary_version_oid of this StudyDictionary.  # noqa: E501


        :return: The dictionary_version_oid of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._dictionary_version_oid

    @dictionary_version_oid.setter
    def dictionary_version_oid(self, dictionary_version_oid):
        """Sets the dictionary_version_oid of this StudyDictionary.


        :param dictionary_version_oid: The dictionary_version_oid of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._dictionary_version_oid = dictionary_version_oid

    @property
    def start_date(self):
        """Gets the start_date of this StudyDictionary.  # noqa: E501


        :return: The start_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this StudyDictionary.


        :param start_date: The start_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this StudyDictionary.  # noqa: E501


        :return: The end_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this StudyDictionary.


        :param end_date: The end_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def version_enabled(self):
        """Gets the version_enabled of this StudyDictionary.  # noqa: E501


        :return: The version_enabled of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._version_enabled

    @version_enabled.setter
    def version_enabled(self, version_enabled):
        """Sets the version_enabled of this StudyDictionary.


        :param version_enabled: The version_enabled of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._version_enabled = version_enabled

    @property
    def license_agreement(self):
        """Gets the license_agreement of this StudyDictionary.  # noqa: E501


        :return: The license_agreement of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._license_agreement

    @license_agreement.setter
    def license_agreement(self, license_agreement):
        """Sets the license_agreement of this StudyDictionary.


        :param license_agreement: The license_agreement of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._license_agreement = license_agreement

    @property
    def lic_agrement_date(self):
        """Gets the lic_agrement_date of this StudyDictionary.  # noqa: E501


        :return: The lic_agrement_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._lic_agrement_date

    @lic_agrement_date.setter
    def lic_agrement_date(self, lic_agrement_date):
        """Sets the lic_agrement_date of this StudyDictionary.


        :param lic_agrement_date: The lic_agrement_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._lic_agrement_date = lic_agrement_date

    @property
    def lic_verify_date(self):
        """Gets the lic_verify_date of this StudyDictionary.  # noqa: E501


        :return: The lic_verify_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._lic_verify_date

    @lic_verify_date.setter
    def lic_verify_date(self, lic_verify_date):
        """Sets the lic_verify_date of this StudyDictionary.


        :param lic_verify_date: The lic_verify_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._lic_verify_date = lic_verify_date

    @property
    def notes(self):
        """Gets the notes of this StudyDictionary.  # noqa: E501


        :return: The notes of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this StudyDictionary.


        :param notes: The notes of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def dictionary_oid(self):
        """Gets the dictionary_oid of this StudyDictionary.  # noqa: E501


        :return: The dictionary_oid of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._dictionary_oid

    @dictionary_oid.setter
    def dictionary_oid(self, dictionary_oid):
        """Sets the dictionary_oid of this StudyDictionary.


        :param dictionary_oid: The dictionary_oid of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._dictionary_oid = dictionary_oid

    @property
    def dictionary_notes(self):
        """Gets the dictionary_notes of this StudyDictionary.  # noqa: E501


        :return: The dictionary_notes of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._dictionary_notes

    @dictionary_notes.setter
    def dictionary_notes(self, dictionary_notes):
        """Sets the dictionary_notes of this StudyDictionary.


        :param dictionary_notes: The dictionary_notes of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._dictionary_notes = dictionary_notes

    @property
    def dictionary_enabled(self):
        """Gets the dictionary_enabled of this StudyDictionary.  # noqa: E501


        :return: The dictionary_enabled of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._dictionary_enabled

    @dictionary_enabled.setter
    def dictionary_enabled(self, dictionary_enabled):
        """Sets the dictionary_enabled of this StudyDictionary.


        :param dictionary_enabled: The dictionary_enabled of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._dictionary_enabled = dictionary_enabled

    @property
    def customer_contact(self):
        """Gets the customer_contact of this StudyDictionary.  # noqa: E501


        :return: The customer_contact of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._customer_contact

    @customer_contact.setter
    def customer_contact(self, customer_contact):
        """Sets the customer_contact of this StudyDictionary.


        :param customer_contact: The customer_contact of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._customer_contact = customer_contact

    @property
    def dictionary_disabled_verbatim(self):
        """Gets the dictionary_disabled_verbatim of this StudyDictionary.  # noqa: E501


        :return: The dictionary_disabled_verbatim of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._dictionary_disabled_verbatim

    @dictionary_disabled_verbatim.setter
    def dictionary_disabled_verbatim(self, dictionary_disabled_verbatim):
        """Sets the dictionary_disabled_verbatim of this StudyDictionary.


        :param dictionary_disabled_verbatim: The dictionary_disabled_verbatim of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._dictionary_disabled_verbatim = dictionary_disabled_verbatim

    @property
    def ref_dictionary_version_oid(self):
        """Gets the ref_dictionary_version_oid of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_version_oid of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_version_oid

    @ref_dictionary_version_oid.setter
    def ref_dictionary_version_oid(self, ref_dictionary_version_oid):
        """Sets the ref_dictionary_version_oid of this StudyDictionary.


        :param ref_dictionary_version_oid: The ref_dictionary_version_oid of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_version_oid = ref_dictionary_version_oid

    @property
    def ref_dictionary_version_number(self):
        """Gets the ref_dictionary_version_number of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_version_number of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_version_number

    @ref_dictionary_version_number.setter
    def ref_dictionary_version_number(self, ref_dictionary_version_number):
        """Sets the ref_dictionary_version_number of this StudyDictionary.


        :param ref_dictionary_version_number: The ref_dictionary_version_number of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_version_number = ref_dictionary_version_number

    @property
    def ref_dictionary_version_release_date(self):
        """Gets the ref_dictionary_version_release_date of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_version_release_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._ref_dictionary_version_release_date

    @ref_dictionary_version_release_date.setter
    def ref_dictionary_version_release_date(self, ref_dictionary_version_release_date):
        """Sets the ref_dictionary_version_release_date of this StudyDictionary.


        :param ref_dictionary_version_release_date: The ref_dictionary_version_release_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._ref_dictionary_version_release_date = ref_dictionary_version_release_date

    @property
    def ref_dictionary_version_upload_date(self):
        """Gets the ref_dictionary_version_upload_date of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_version_upload_date of this StudyDictionary.  # noqa: E501
        :rtype: datetime
        """
        return self._ref_dictionary_version_upload_date

    @ref_dictionary_version_upload_date.setter
    def ref_dictionary_version_upload_date(self, ref_dictionary_version_upload_date):
        """Sets the ref_dictionary_version_upload_date of this StudyDictionary.


        :param ref_dictionary_version_upload_date: The ref_dictionary_version_upload_date of this StudyDictionary.  # noqa: E501
        :type: datetime
        """

        self._ref_dictionary_version_upload_date = ref_dictionary_version_upload_date

    @property
    def ref_dictionary_version_enabled(self):
        """Gets the ref_dictionary_version_enabled of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_version_enabled of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._ref_dictionary_version_enabled

    @ref_dictionary_version_enabled.setter
    def ref_dictionary_version_enabled(self, ref_dictionary_version_enabled):
        """Sets the ref_dictionary_version_enabled of this StudyDictionary.


        :param ref_dictionary_version_enabled: The ref_dictionary_version_enabled of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._ref_dictionary_version_enabled = ref_dictionary_version_enabled

    @property
    def medical_dictionary_version_id(self):
        """Gets the medical_dictionary_version_id of this StudyDictionary.  # noqa: E501


        :return: The medical_dictionary_version_id of this StudyDictionary.  # noqa: E501
        :rtype: int
        """
        return self._medical_dictionary_version_id

    @medical_dictionary_version_id.setter
    def medical_dictionary_version_id(self, medical_dictionary_version_id):
        """Sets the medical_dictionary_version_id of this StudyDictionary.


        :param medical_dictionary_version_id: The medical_dictionary_version_id of this StudyDictionary.  # noqa: E501
        :type: int
        """

        self._medical_dictionary_version_id = medical_dictionary_version_id

    @property
    def ref_dictionary_oid(self):
        """Gets the ref_dictionary_oid of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_oid of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_oid

    @ref_dictionary_oid.setter
    def ref_dictionary_oid(self, ref_dictionary_oid):
        """Sets the ref_dictionary_oid of this StudyDictionary.


        :param ref_dictionary_oid: The ref_dictionary_oid of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_oid = ref_dictionary_oid

    @property
    def ref_dictionary_name(self):
        """Gets the ref_dictionary_name of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_name of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_name

    @ref_dictionary_name.setter
    def ref_dictionary_name(self, ref_dictionary_name):
        """Sets the ref_dictionary_name of this StudyDictionary.


        :param ref_dictionary_name: The ref_dictionary_name of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_name = ref_dictionary_name

    @property
    def ref_dictionary_description(self):
        """Gets the ref_dictionary_description of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_description of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_description

    @ref_dictionary_description.setter
    def ref_dictionary_description(self, ref_dictionary_description):
        """Sets the ref_dictionary_description of this StudyDictionary.


        :param ref_dictionary_description: The ref_dictionary_description of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_description = ref_dictionary_description

    @property
    def ref_dictionary_enabled(self):
        """Gets the ref_dictionary_enabled of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_enabled of this StudyDictionary.  # noqa: E501
        :rtype: bool
        """
        return self._ref_dictionary_enabled

    @ref_dictionary_enabled.setter
    def ref_dictionary_enabled(self, ref_dictionary_enabled):
        """Sets the ref_dictionary_enabled of this StudyDictionary.


        :param ref_dictionary_enabled: The ref_dictionary_enabled of this StudyDictionary.  # noqa: E501
        :type: bool
        """

        self._ref_dictionary_enabled = ref_dictionary_enabled

    @property
    def ref_dictionary_category(self):
        """Gets the ref_dictionary_category of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_category of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_category

    @ref_dictionary_category.setter
    def ref_dictionary_category(self, ref_dictionary_category):
        """Sets the ref_dictionary_category of this StudyDictionary.


        :param ref_dictionary_category: The ref_dictionary_category of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_category = ref_dictionary_category

    @property
    def ref_dictionary_contact(self):
        """Gets the ref_dictionary_contact of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_contact of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_contact

    @ref_dictionary_contact.setter
    def ref_dictionary_contact(self, ref_dictionary_contact):
        """Sets the ref_dictionary_contact of this StudyDictionary.


        :param ref_dictionary_contact: The ref_dictionary_contact of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_contact = ref_dictionary_contact

    @property
    def ref_dictionary_web_page(self):
        """Gets the ref_dictionary_web_page of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_web_page of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_web_page

    @ref_dictionary_web_page.setter
    def ref_dictionary_web_page(self, ref_dictionary_web_page):
        """Sets the ref_dictionary_web_page of this StudyDictionary.


        :param ref_dictionary_web_page: The ref_dictionary_web_page of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_web_page = ref_dictionary_web_page

    @property
    def ref_dictionary_license_info(self):
        """Gets the ref_dictionary_license_info of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_license_info of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_license_info

    @ref_dictionary_license_info.setter
    def ref_dictionary_license_info(self, ref_dictionary_license_info):
        """Sets the ref_dictionary_license_info of this StudyDictionary.


        :param ref_dictionary_license_info: The ref_dictionary_license_info of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_license_info = ref_dictionary_license_info

    @property
    def ref_dictionary_search_error_message(self):
        """Gets the ref_dictionary_search_error_message of this StudyDictionary.  # noqa: E501


        :return: The ref_dictionary_search_error_message of this StudyDictionary.  # noqa: E501
        :rtype: str
        """
        return self._ref_dictionary_search_error_message

    @ref_dictionary_search_error_message.setter
    def ref_dictionary_search_error_message(self, ref_dictionary_search_error_message):
        """Sets the ref_dictionary_search_error_message of this StudyDictionary.


        :param ref_dictionary_search_error_message: The ref_dictionary_search_error_message of this StudyDictionary.  # noqa: E501
        :type: str
        """

        self._ref_dictionary_search_error_message = ref_dictionary_search_error_message

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StudyDictionary):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, StudyDictionary):
            return True

        return self.to_dict() != other.to_dict()
