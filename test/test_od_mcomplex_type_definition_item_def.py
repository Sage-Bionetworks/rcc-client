# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.od_mcomplex_type_definition_item_def import ODMcomplexTypeDefinitionItemDef  # noqa: E501
from rcc.rest import ApiException

class TestODMcomplexTypeDefinitionItemDef(unittest.TestCase):
    """ODMcomplexTypeDefinitionItemDef unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ODMcomplexTypeDefinitionItemDef
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.od_mcomplex_type_definition_item_def.ODMcomplexTypeDefinitionItemDef()  # noqa: E501
        if include_optional :
            return ODMcomplexTypeDefinitionItemDef(
                description = rcc.models.od_mcomplex_type_definition_description.ODMcomplexTypeDefinitionDescription(
                    translated_text = [
                        rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                            value = '0', 
                            lang = '0', )
                        ], ), 
                question = rcc.models.od_mcomplex_type_definition_question.ODMcomplexTypeDefinitionQuestion(
                    translated_text = [
                        rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                            value = '0', 
                            lang = '0', )
                        ], ), 
                external_question = rcc.models.od_mcomplex_type_definition_external_question.ODMcomplexTypeDefinitionExternalQuestion(
                    dictionary = '0', 
                    version = '0', 
                    code = '0', ), 
                measurement_unit_ref = [
                    rcc.models.od_mcomplex_type_definition_measurement_unit_ref.ODMcomplexTypeDefinitionMeasurementUnitRef(
                        measurement_unit_oid = '0', )
                    ], 
                range_check = [
                    rcc.models.od_mcomplex_type_definition_range_check.ODMcomplexTypeDefinitionRangeCheck(
                        check_value = [
                            rcc.models.od_mcomplex_type_definition_check_value.ODMcomplexTypeDefinitionCheckValue(
                                value = '0', )
                            ], 
                        formal_expression = [
                            rcc.models.od_mcomplex_type_definition_formal_expression.ODMcomplexTypeDefinitionFormalExpression(
                                value = '0', 
                                context = '0', )
                            ], 
                        measurement_unit_ref = rcc.models.od_mcomplex_type_definition_measurement_unit_ref.ODMcomplexTypeDefinitionMeasurementUnitRef(
                            measurement_unit_oid = '0', ), 
                        error_message = rcc.models.od_mcomplex_type_definition_error_message.ODMcomplexTypeDefinitionErrorMessage(
                            translated_text = [
                                rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                    value = '0', 
                                    lang = '0', )
                                ], ), 
                        comparator = 'LT', 
                        soft_hard = 'SOFT', )
                    ], 
                code_list_ref = rcc.models.od_mcomplex_type_definition_code_list_ref.ODMcomplexTypeDefinitionCodeListRef(
                    code_list_oid = '0', ), 
                role = [
                    rcc.models.od_mcomplex_type_definition_role.ODMcomplexTypeDefinitionRole(
                        value = '0', )
                    ], 
                alias = [
                    rcc.models.od_mcomplex_type_definition_alias.ODMcomplexTypeDefinitionAlias(
                        context = '0', 
                        name = '0', )
                    ], 
                response_type = '0', 
                oid = '0', 
                name = '0', 
                data_type = 'INTEGER', 
                length = 56, 
                significant_digits = 56, 
                origin = '0', 
                comment = '0', 
                crfitem_definition = rcc.models.crf_item_definition.CRFItemDefinition(
                    item_document_file = rcc.models.file_base64.FileBase64(
                        value = '0', 
                        file_name = '0', 
                        content_type = '0', 
                        file_size = 56, ), 
                    item_data_type = '0', 
                    measurement_unit_name = '0', 
                    variable_name = '0', 
                    label = '0', 
                    label_plain_text = '0', 
                    phi_status = True, 
                    left_alignment = True, 
                    rc_oid = '0', 
                    field_width = 56, 
                    info_text = '0', 
                    min_value = '0', 
                    max_value = '0', 
                    show_validator = True, 
                    soft_validation = True, 
                    calc_field_equation = '0', 
                    custom_info1 = '0', 
                    custom_info2 = '0', 
                    warning_when_left_empty = '0', 
                    stratification_variable = True, 
                    study_dictionary = '0', 
                    default_value = '0', 
                    subject_group = True, 
                    creation_source = '0', 
                    promis_oid = '0', 
                    promis_final_score = True, 
                    item_fhir_metadata = '0', 
                    required_query_description = '0', 
                    crfitem_metadata = rcc.models.crf_item_metadata.CRFItemMetadata(
                        item_metadata_oid = '0', 
                        column_number = 56, 
                        page_number_label = '0', 
                        question_number_label = '0', 
                        left_item_text = '0', 
                        right_item_text = '0', 
                        regexp = '0', 
                        regexp_error_msg = '0', 
                        ordinal = 56, 
                        required = True, 
                        response_layout = '0', 
                        width_decimal = '0', 
                        show_item = True, 
                        code_ref = '0', 
                        group_oid = '0', 
                        is_required = True, 
                        disp_sequence = 56, 
                        branching_equation = '0', 
                        crf_version_oid = '0', 
                        hide_from_survey = True, 
                        position_row = 56, 
                        position_column = 56, 
                        item_data_type = '0', 
                        measurement_unit_name = '0', 
                        variable_name = '0', 
                        label = '0', 
                        label_plain_text = '0', 
                        phi_status = True, 
                        left_alignment = True, 
                        field_width = 56, 
                        info_text = '0', 
                        min_value = '0', 
                        max_value = '0', 
                        show_validator = True, 
                        soft_validation = True, 
                        calc_field_equation = '0', 
                        custom_info1 = '0', 
                        custom_info2 = '0', 
                        stratification_variable = True, 
                        show_response_set_value_too = True, 
                        study_dictionary = '0', 
                        default_value = '0', 
                        subject_group = True, 
                        required_query_description = '0', 
                        warning_when_left_empty = '0', 
                        dynamic_list_rs_values_eq = '0', 
                        dynamic_list_type = '0', 
                        dynamic_list_no_duplicates = True, 
                        used_in_dys_fields = True, 
                        econsent_signature = True, ), 
                    crfitem_metadata_group = rcc.models.crf_item_metadata_group.CRFItemMetadataGroup(), ), 
                sasfield_name = '0', 
                sdsvar_name = '0'
            )
        else :
            return ODMcomplexTypeDefinitionItemDef(
        )

    def testODMcomplexTypeDefinitionItemDef(self):
        """Test ODMcomplexTypeDefinitionItemDef"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
