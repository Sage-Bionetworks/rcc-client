# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.study_dictionary import StudyDictionary  # noqa: E501
from rcc.rest import ApiException

class TestStudyDictionary(unittest.TestCase):
    """StudyDictionary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StudyDictionary
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.study_dictionary.StudyDictionary()  # noqa: E501
        if include_optional :
            return StudyDictionary(
                study_dictionary_oid = '0', 
                enable_site_coding = True, 
                enable_auto_coding = True, 
                dictionary_version_oid = '0', 
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                version_enabled = True, 
                license_agreement = '0', 
                lic_agrement_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                lic_verify_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                notes = '0', 
                dictionary_oid = '0', 
                dictionary_notes = '0', 
                dictionary_enabled = True, 
                customer_contact = '0', 
                dictionary_disabled_verbatim = True, 
                ref_dictionary_version_oid = '0', 
                ref_dictionary_version_number = '0', 
                ref_dictionary_version_release_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                ref_dictionary_version_upload_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                ref_dictionary_version_enabled = True, 
                medical_dictionary_version_id = 56, 
                ref_dictionary_oid = '0', 
                ref_dictionary_name = '0', 
                ref_dictionary_description = '0', 
                ref_dictionary_enabled = True, 
                ref_dictionary_category = '0', 
                ref_dictionary_contact = '0', 
                ref_dictionary_web_page = '0', 
                ref_dictionary_license_info = '0', 
                ref_dictionary_search_error_message = '0'
            )
        else :
            return StudyDictionary(
        )

    def testStudyDictionary(self):
        """Test StudyDictionary"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
