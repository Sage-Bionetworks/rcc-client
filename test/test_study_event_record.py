# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.study_event_record import StudyEventRecord  # noqa: E501
from rcc.rest import ApiException

class TestStudyEventRecord(unittest.TestCase):
    """StudyEventRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StudyEventRecord
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.study_event_record.StudyEventRecord()  # noqa: E501
        if include_optional :
            return StudyEventRecord(
                participant_id = '0', 
                participant_screening_number = '0', 
                participant_status = '0', 
                participant_states_history = '0', 
                participant_econsent_status = '0', 
                participant_enrollment_date = '0', 
                participant_screening_date = '0', 
                participant_initials = '0', 
                participant_email = '0', 
                participant_updated_by = '0', 
                participant_updated_date = '0', 
                site_name = '0', 
                study_group = '0', 
                event_name = '0', 
                event_date = '0', 
                event_status = '0', 
                event_states_history = '0', 
                event_updated_by = '0', 
                event_updated_date = '0', 
                items = [
                    rcc.models.item_value.ItemValue(
                        item_name = '0', 
                        item_value = '0', 
                        updated_by = '0', 
                        updated_date = '0', 
                        states_history = '0', 
                        started_by = '0', 
                        started_date = '0', 
                        completed_by = '0', 
                        completed_date = '0', 
                        crf_occurrence = 56, 
                        sdv = True, 
                        sdv_by = '0', 
                        sdv_date = '0', 
                        mrv = True, 
                        mrv_by = '0', 
                        mrv_date = '0', 
                        drv = True, 
                        drv_by = '0', 
                        drv_date = '0', 
                        response_set = rcc.models.response_set_rpc.ResponseSetRpc(
                            id = 56, 
                            crf_id = 56, 
                            loockup_code_id = 56, 
                            study_id = 56, 
                            response_set_values = [
                                rcc.models.response_set_value_rpc.ResponseSetValueRpc(
                                    id = 56, 
                                    study_id = 56, 
                                    response_sets_id = 56, 
                                    options_text = '0', 
                                    value = '0', 
                                    display_sequence = 56, )
                                ], 
                            label = '0', 
                            hidden = True, ), )
                    ], 
                participant_date_of_birth = '0', 
                participant_creation_date = '0'
            )
        else :
            return StudyEventRecord(
        )

    def testStudyEventRecord(self):
        """Test StudyEventRecord"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
