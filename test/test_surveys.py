# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.surveys import Surveys  # noqa: E501
from rcc.rest import ApiException

class TestSurveys(unittest.TestCase):
    """Surveys unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Surveys
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.surveys.Surveys()  # noqa: E501
        if include_optional :
            return Surveys(
                survey = [
                    rcc.models.survey.Survey(
                        survey_link = [
                            rcc.models.survey_link.SurveyLink(
                                subject_oid = '0', 
                                subject_id = '0', 
                                study_event_definition_oid = '0', 
                                event_name = '0', 
                                crf_oid = '0', 
                                crf_name = '0', 
                                crf_version_oid = '0', 
                                code = '0', 
                                failed_attempts = 56, 
                                locked_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                preview_only = 56, 
                                public_survey = 56, 
                                site_oid = '0', 
                                recent = 56, )
                            ], 
                        survey_queue = [
                            rcc.models.survey_queue.SurveyQueue(
                                study_event_definition_oid = '0', 
                                active = 56, 
                                auto_start = 56, 
                                condition_surveycomplete_survey_oid = '0', 
                                condition_surveycomplete_event_oid = '0', 
                                condition_andor_code = '0', 
                                condition_logic = '0', )
                            ], 
                        survey_scheduler = [
                            rcc.models.survey_scheduler.SurveyScheduler(
                                study_event_definition_oid = '0', 
                                active = 56, 
                                email_subject = '0', 
                                email_content = '0', 
                                email_sender = '0', 
                                condition_surveycomplete_survey_oid = '0', 
                                condition_surveycomplete_event_oid = '0', 
                                condition_andor_code = '0', 
                                condition_logic = '0', 
                                condition_send_time_option_code = '0', 
                                condition_send_time_lag_days = 56, 
                                condition_send_time_lag_hours = 56, 
                                condition_send_time_lag_minutes = 56, 
                                condition_send_next_day_type_code = '0', 
                                condition_send_next_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                condition_send_next_time_exact = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                delivery_type = '0', 
                                reminder_type = '0', 
                                reminder_time_lag_days = 56, 
                                reminder_time_lag_hours = 56, 
                                reminder_time_lag_minutes = 56, 
                                reminder_next_day_type = '0', 
                                reminder_next_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                reminder_exact_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                reminder_num = 56, 
                                survey_duration = 56, )
                            ], 
                        survey_logo = rcc.models.file_base64.FileBase64(
                            value = '0', 
                            file_name = '0', 
                            content_type = '0', 
                            file_size = 56, ), 
                        survey_confirmation_email_attachment = rcc.models.file_base64.FileBase64(
                            value = '0', 
                            file_name = '0', 
                            content_type = '0', 
                            file_size = 56, ), 
                        survey_oid = '0', 
                        crf_oid = '0', 
                        crf_name = '0', 
                        crf_version_oid = '0', 
                        title = '0', 
                        instructions = '0', 
                        acknowledgement = '0', 
                        question_by_section = 56, 
                        display_page_number = 56, 
                        question_auto_numbering = 56, 
                        survey_enabled = 56, 
                        save_and_return = 56, 
                        logo = 56, 
                        hide_title = 56, 
                        view_results = 56, 
                        min_responses_view_results = 56, 
                        check_diversity_view_results = 56, 
                        end_survey_redirect_url = '0', 
                        promis_skip_question = 56, 
                        survey_auth_enabled_single = 56, 
                        edit_completed_response = 56, 
                        hide_back_button = 56, 
                        show_required_field_text = 56, 
                        confirmation_email_subject = '0', 
                        confirmation_email_content = '0', 
                        confirmation_email_from = '0', 
                        confirmation_email_attachment = 56, 
                        identifier = '0', 
                        send_confirmation_email = 56, 
                        survey_redirect_message = '0', 
                        survey_thankyou_message = '0', 
                        survey_expiration = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        close_survey_after_completion = 56, 
                        customize_time_availability = 56, 
                        availability_from_time = '0', 
                        availability_to_time = '0', 
                        calendared_invitation_enabled = 56, 
                        hide_submit = 56, )
                    ]
            )
        else :
            return Surveys(
        )

    def testSurveys(self):
        """Test Surveys"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
