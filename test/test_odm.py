# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.odm import ODM  # noqa: E501
from rcc.rest import ApiException

class TestODM(unittest.TestCase):
    """ODM unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ODM
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.odm.ODM()  # noqa: E501
        if include_optional :
            return ODM(
                study = [
                    rcc.models.od_mcomplex_type_definition_study.ODMcomplexTypeDefinitionStudy(
                        global_variables = rcc.models.od_mcomplex_type_definition_global_variables.ODMcomplexTypeDefinitionGlobalVariables(
                            study_name = rcc.models.od_mcomplex_type_definition_study_name.ODMcomplexTypeDefinitionStudyName(
                                value = '0', ), 
                            study_description = rcc.models.od_mcomplex_type_definition_study_description.ODMcomplexTypeDefinitionStudyDescription(
                                value = '0', ), 
                            protocol_name = rcc.models.od_mcomplex_type_definition_protocol_name.ODMcomplexTypeDefinitionProtocolName(
                                value = '0', ), 
                            global_site = rcc.models.global_site.GlobalSite(
                                global_site_parent = rcc.models.global_site_parent.GlobalSiteParent(
                                    parent_site_name = '0', 
                                    parent_site_oid = '0', 
                                    parent_site_initial_id = 56, ), 
                                source_site_initial_id = 56, 
                                name = '0', 
                                site_oid = '0', 
                                site_type_oid = '0', 
                                enabled = True, 
                                data_collection_enabled = True, 
                                facility_name = '0', 
                                facility_city = '0', 
                                facility_state = '0', 
                                facility_zip = '0', 
                                facility_country = '0', 
                                facility_contact_name = '0', 
                                facility_contact_degree = '0', 
                                facility_phone = '0', 
                                facility_email = '0', ), 
                            parent_global_sites = rcc.models.parent_global_sites.ParentGlobalSites(), 
                            secondary_ids = '0', 
                            summary = '0', 
                            principal_investigator = '0', 
                            expected_enrollment = 56, 
                            protocol_approval_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            completion_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            interview_date_editable = True, 
                            interviewer_name_editable = True, 
                            enabled = True, 
                            my_health_enabled = True, ), 
                        basic_definitions = rcc.models.od_mcomplex_type_definition_basic_definitions.ODMcomplexTypeDefinitionBasicDefinitions(
                            measurement_unit = [
                                rcc.models.od_mcomplex_type_definition_measurement_unit.ODMcomplexTypeDefinitionMeasurementUnit(
                                    symbol = rcc.models.od_mcomplex_type_definition_symbol.ODMcomplexTypeDefinitionSymbol(
                                        translated_text = [
                                            rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                value = '0', 
                                                lang = '0', )
                                            ], ), 
                                    alias = [
                                        rcc.models.od_mcomplex_type_definition_alias.ODMcomplexTypeDefinitionAlias(
                                            context = '0', 
                                            name = '0', )
                                        ], 
                                    oid = '0', 
                                    name = '0', )
                                ], ), 
                        meta_data_version = [
                            rcc.models.od_mcomplex_type_definition_meta_data_version.ODMcomplexTypeDefinitionMetaDataVersion(
                                include = rcc.models.od_mcomplex_type_definition_include.ODMcomplexTypeDefinitionInclude(
                                    study_oid = '0', 
                                    meta_data_version_oid = '0', ), 
                                protocol = rcc.models.od_mcomplex_type_definition_protocol.ODMcomplexTypeDefinitionProtocol(
                                    description = rcc.models.od_mcomplex_type_definition_description.ODMcomplexTypeDefinitionDescription(
                                        translated_text = [
                                            rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                value = '0', 
                                                lang = '0', )
                                            ], ), 
                                    study_event_ref = [
                                        rcc.models.od_mcomplex_type_definition_study_event_ref.ODMcomplexTypeDefinitionStudyEventRef(
                                            study_event_oid = '0', 
                                            order_number = 56, 
                                            mandatory = 'YES', 
                                            collection_exception_condition_oid = '0', )
                                        ], ), 
                                study_event_def = [
                                    rcc.models.od_mcomplex_type_definition_study_event_def.ODMcomplexTypeDefinitionStudyEventDef(
                                        form_ref = [
                                            rcc.models.od_mcomplex_type_definition_form_ref.ODMcomplexTypeDefinitionFormRef(
                                                default_version = '0', 
                                                source_data_verification = '0', 
                                                double_data_entry = True, 
                                                display_sequence = 56, 
                                                required_crf = True, 
                                                hide_crf = True, 
                                                accept_new_crf_versions = True, 
                                                dynamic_form = True, 
                                                source_data_verification_code = 56, 
                                                repeating = 'YES', 
                                                use_in_progress = True, 
                                                form_oid = '0', 
                                                order_number = 56, 
                                                mandatory = 'YES', 
                                                collection_exception_condition_oid = '0', 
                                                monitoring = [
                                                    rcc.models.monitoring.Monitoring(
                                                        partial_item = [
                                                            rcc.models.partial_item.PartialItem(
                                                                item_name = '0', 
                                                                item_oid = '0', 
                                                                comment_required = True, 
                                                                required = True, )
                                                            ], 
                                                        type = '0', 
                                                        crf_type = '0', 
                                                        display_sequence = 56, 
                                                        comment_required = True, 
                                                        optional = True, )
                                                    ], 
                                                partial_sdv = [
                                                    rcc.models.partial_sdv.PartialSDV(
                                                        item_name = '0', 
                                                        item_oid = '0', )
                                                    ], )
                                            ], 
                                        unique_event_name = '0', 
                                        study_event_definition_type = '0', 
                                        display_sequence = 56, 
                                        day_schedule = 56, 
                                        day_min = 56, 
                                        day_max = 56, 
                                        grace_hour_min = 56, 
                                        grace_hour_max = 56, 
                                        grace_minute_min = 56, 
                                        grace_minute_max = 56, 
                                        can_edit_before = True, 
                                        can_edit_after = True, 
                                        weekdays_only = True, 
                                        dynamic_event = True, 
                                        repeat_frequency = 56, 
                                        repeat_for_how_many_days = 56, 
                                        created_by_rule = True, 
                                        oid = '0', 
                                        name = '0', 
                                        repeating = 'YES', 
                                        type = 'SCHEDULED', 
                                        category = '0', 
                                        econsent_event = True, )
                                    ], 
                                form_def = [
                                    rcc.models.od_mcomplex_type_definition_form_def.ODMcomplexTypeDefinitionFormDef(
                                        item_group_ref = [
                                            rcc.models.od_mcomplex_type_definition_item_group_ref.ODMcomplexTypeDefinitionItemGroupRef(
                                                order_number = 56, 
                                                mandatory = 'YES', 
                                                collection_exception_condition_oid = '0', 
                                                item_group_oid = '0', )
                                            ], 
                                        archive_layout = [
                                            rcc.models.od_mcomplex_type_definition_archive_layout.ODMcomplexTypeDefinitionArchiveLayout(
                                                oid = '0', 
                                                pdf_file_name = '0', 
                                                presentation_oid = '0', )
                                            ], 
                                        oid = '0', 
                                        name = '0', 
                                        repeating = 'YES', 
                                        available_crf_languages = rcc.models.available_crf_languages.AvailableCrfLanguages(
                                            available_crf_language = [
                                                rcc.models.available_crf_language.AvailableCrfLanguage(
                                                    language_code = '0', )
                                                ], ), 
                                        language_labels = rcc.models.language_labels.LanguageLabels(
                                            language_label = [
                                                rcc.models.language_label.LanguageLabel(
                                                    object_oid = '0', 
                                                    object_type = '0', 
                                                    translation = '0', 
                                                    translation_plain_text = '0', 
                                                    lang_code = '0', )
                                                ], ), 
                                        crfform_version_definition = rcc.models.crf_form_version_definition.CRFFormVersionDefinition(
                                            version_name = '0', 
                                            revision_notes = '0', 
                                            version_oid = '0', 
                                            fields = 56, 
                                            revision_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            primary_flag = True, 
                                            disp_sequence = 56, 
                                            enabled = True, 
                                            screening_expression = '0', 
                                            screening_flag = True, 
                                            custom_enroll_flag = True, 
                                            used_at_enroll = True, 
                                            randomization_expression = '0', 
                                            irb_approval_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            valid_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            screening_e_consent_flag = True, 
                                            econsent = True, 
                                            crfform_definition = rcc.models.crf_form_definition.CRFFormDefinition(
                                                name = '0', 
                                                sas_name = '0', 
                                                show_lock = True, 
                                                show_esignature = True, 
                                                custom_text = '0', 
                                                enable_survey = True, 
                                                randomization_flag = True, 
                                                available_on_mobile = True, 
                                                enable_subject_source = True, 
                                                dynamic_form = True, 
                                                form_type = '0', 
                                                promis_form_oid = '0', 
                                                enable_phir_integration = True, 
                                                available_in_patient_portal = True, ), 
                                            crfform_section = [
                                                rcc.models.crf_form_section_definition.CRFFormSectionDefinition(
                                                    title = '0', 
                                                    subtitle = '0', 
                                                    status = '0', 
                                                    instructions = '0', 
                                                    page_number_label = '0', 
                                                    display_sequence = 56, 
                                                    borders = 56, 
                                                    fields_total_width = 56, 
                                                    fields_label_width = 56, 
                                                    section_branching_equation = '0', )
                                                ], ), )
                                    ], 
                                item_group_def = [
                                    rcc.models.od_mcomplex_type_definition_item_group_def.ODMcomplexTypeDefinitionItemGroupDef(
                                        item_ref = [
                                            rcc.models.od_mcomplex_type_definition_item_ref.ODMcomplexTypeDefinitionItemRef(
                                                item_oid = '0', 
                                                key_sequence = 56, 
                                                method_oid = '0', 
                                                imputation_method_oid = '0', 
                                                role = '0', 
                                                role_code_list_oid = '0', 
                                                order_number = 56, 
                                                mandatory = 'YES', 
                                                collection_exception_condition_oid = '0', )
                                            ], 
                                        oid = '0', 
                                        name = '0', 
                                        repeating = 'YES', 
                                        is_reference_data = 'YES', 
                                        domain = '0', 
                                        origin = '0', 
                                        role = '0', 
                                        purpose = '0', 
                                        comment = '0', 
                                        item_group_definition = rcc.models.item_group_definition.ItemGroupDefinition(
                                            item_group_row = [
                                                rcc.models.item_group_row.ItemGroupRow(
                                                    label = '0', 
                                                    display_sequence = 56, )
                                                ], 
                                            item_group_col = [
                                                rcc.models.item_group_col.ItemGroupCol(
                                                    label = '0', 
                                                    display_sequence = 56, )
                                                ], 
                                            group_status = '0', 
                                            group_type = '0', 
                                            section_oid = '0', 
                                            name = '0', 
                                            oid = '0', 
                                            display_sequence = 56, 
                                            group_branching_equation = '0', 
                                            max_repeating_rows = 56, 
                                            is_fixed_rows = True, 
                                            is_dummy_flag = True, 
                                            original_item_groups_oid = '0', ), 
                                        sasdataset_name = '0', )
                                    ], 
                                item_def = [
                                    rcc.models.od_mcomplex_type_definition_item_def.ODMcomplexTypeDefinitionItemDef(
                                        question = rcc.models.od_mcomplex_type_definition_question.ODMcomplexTypeDefinitionQuestion(
                                            translated_text = [
                                                rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                    value = '0', 
                                                    lang = '0', )
                                                ], ), 
                                        external_question = rcc.models.od_mcomplex_type_definition_external_question.ODMcomplexTypeDefinitionExternalQuestion(
                                            dictionary = '0', 
                                            version = '0', 
                                            code = '0', ), 
                                        measurement_unit_ref = [
                                            rcc.models.od_mcomplex_type_definition_measurement_unit_ref.ODMcomplexTypeDefinitionMeasurementUnitRef(
                                                measurement_unit_oid = '0', )
                                            ], 
                                        range_check = [
                                            rcc.models.od_mcomplex_type_definition_range_check.ODMcomplexTypeDefinitionRangeCheck(
                                                check_value = [
                                                    rcc.models.od_mcomplex_type_definition_check_value.ODMcomplexTypeDefinitionCheckValue(
                                                        value = '0', )
                                                    ], 
                                                formal_expression = [
                                                    rcc.models.od_mcomplex_type_definition_formal_expression.ODMcomplexTypeDefinitionFormalExpression(
                                                        value = '0', 
                                                        context = '0', )
                                                    ], 
                                                error_message = rcc.models.od_mcomplex_type_definition_error_message.ODMcomplexTypeDefinitionErrorMessage(
                                                    translated_text = [
                                                        rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                            value = '0', 
                                                            lang = '0', )
                                                        ], ), 
                                                comparator = 'LT', 
                                                soft_hard = 'SOFT', )
                                            ], 
                                        code_list_ref = rcc.models.od_mcomplex_type_definition_code_list_ref.ODMcomplexTypeDefinitionCodeListRef(
                                            code_list_oid = '0', ), 
                                        role = [
                                            rcc.models.od_mcomplex_type_definition_role.ODMcomplexTypeDefinitionRole(
                                                value = '0', )
                                            ], 
                                        response_type = '0', 
                                        oid = '0', 
                                        name = '0', 
                                        data_type = 'INTEGER', 
                                        length = 56, 
                                        significant_digits = 56, 
                                        origin = '0', 
                                        comment = '0', 
                                        crfitem_definition = rcc.models.crf_item_definition.CRFItemDefinition(
                                            item_document_file = rcc.models.file_base64.FileBase64(
                                                value = '0', 
                                                file_name = '0', 
                                                content_type = '0', 
                                                file_size = 56, ), 
                                            item_data_type = '0', 
                                            measurement_unit_name = '0', 
                                            variable_name = '0', 
                                            label = '0', 
                                            label_plain_text = '0', 
                                            phi_status = True, 
                                            left_alignment = True, 
                                            rc_oid = '0', 
                                            field_width = 56, 
                                            info_text = '0', 
                                            min_value = '0', 
                                            max_value = '0', 
                                            show_validator = True, 
                                            soft_validation = True, 
                                            calc_field_equation = '0', 
                                            custom_info1 = '0', 
                                            custom_info2 = '0', 
                                            warning_when_left_empty = '0', 
                                            stratification_variable = True, 
                                            study_dictionary = '0', 
                                            default_value = '0', 
                                            subject_group = True, 
                                            creation_source = '0', 
                                            promis_oid = '0', 
                                            promis_final_score = True, 
                                            item_fhir_metadata = '0', 
                                            required_query_description = '0', 
                                            crfitem_metadata = rcc.models.crf_item_metadata.CRFItemMetadata(
                                                item_metadata_oid = '0', 
                                                column_number = 56, 
                                                page_number_label = '0', 
                                                question_number_label = '0', 
                                                left_item_text = '0', 
                                                right_item_text = '0', 
                                                regexp = '0', 
                                                regexp_error_msg = '0', 
                                                ordinal = 56, 
                                                required = True, 
                                                response_layout = '0', 
                                                width_decimal = '0', 
                                                show_item = True, 
                                                code_ref = '0', 
                                                group_oid = '0', 
                                                is_required = True, 
                                                disp_sequence = 56, 
                                                branching_equation = '0', 
                                                crf_version_oid = '0', 
                                                hide_from_survey = True, 
                                                position_row = 56, 
                                                position_column = 56, 
                                                item_data_type = '0', 
                                                measurement_unit_name = '0', 
                                                variable_name = '0', 
                                                label = '0', 
                                                label_plain_text = '0', 
                                                phi_status = True, 
                                                left_alignment = True, 
                                                field_width = 56, 
                                                info_text = '0', 
                                                min_value = '0', 
                                                max_value = '0', 
                                                show_validator = True, 
                                                soft_validation = True, 
                                                calc_field_equation = '0', 
                                                custom_info1 = '0', 
                                                custom_info2 = '0', 
                                                stratification_variable = True, 
                                                show_response_set_value_too = True, 
                                                study_dictionary = '0', 
                                                default_value = '0', 
                                                subject_group = True, 
                                                required_query_description = '0', 
                                                warning_when_left_empty = '0', 
                                                dynamic_list_rs_values_eq = '0', 
                                                dynamic_list_type = '0', 
                                                dynamic_list_no_duplicates = True, 
                                                used_in_dys_fields = True, 
                                                econsent_signature = True, ), 
                                            crfitem_metadata_group = rcc.models.crf_item_metadata_group.CRFItemMetadataGroup(), ), 
                                        sasfield_name = '0', 
                                        sdsvar_name = '0', )
                                    ], 
                                repeating_crf_custom_columns_def = [
                                    rcc.models.od_mcomplex_type_definition_repeating_crf_custom_columns_def.ODMcomplexTypeDefinitionRepeatingCrfCustomColumnsDef(
                                        repeating_crf_custom_columns_ref = [
                                            rcc.models.od_mcomplex_type_definition_repeating_crf_custom_columns_ref.ODMcomplexTypeDefinitionRepeatingCrfCustomColumnsRef(
                                                item_metadata_oid = '0', 
                                                site_oid = '0', 
                                                event_definition_oid = '0', 
                                                display_sequence = 56, )
                                            ], 
                                        item_metadata_oid = '0', 
                                        site_oid = '0', 
                                        event_definition_oid = '0', 
                                        display_sequence = 56, )
                                    ], 
                                code_list = [
                                    rcc.models.od_mcomplex_type_definition_code_list.ODMcomplexTypeDefinitionCodeList(
                                        code_list_item = [
                                            rcc.models.od_mcomplex_type_definition_code_list_item.ODMcomplexTypeDefinitionCodeListItem(
                                                decode = rcc.models.od_mcomplex_type_definition_decode.ODMcomplexTypeDefinitionDecode(
                                                    translated_text = [
                                                        rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                            value = '0', 
                                                            lang = '0', )
                                                        ], ), 
                                                coded_value = '0', 
                                                ui_width = '0', 
                                                rank = 1.337, 
                                                order_number = 56, )
                                            ], 
                                        external_code_list = rcc.models.od_mcomplex_type_definition_external_code_list.ODMcomplexTypeDefinitionExternalCodeList(
                                            dictionary = '0', 
                                            version = '0', 
                                            href = '0', 
                                            ref = '0', ), 
                                        enumerated_item = [
                                            rcc.models.od_mcomplex_type_definition_enumerated_item.ODMcomplexTypeDefinitionEnumeratedItem(
                                                coded_value = '0', 
                                                ui_width = '0', 
                                                rank = 1.337, 
                                                order_number = 56, )
                                            ], 
                                        oid = '0', 
                                        name = '0', 
                                        data_type = 'INTEGER', 
                                        label = '0', 
                                        form_oid = '0', 
                                        response_type = '0', 
                                        hidden = True, 
                                        is_global = True, 
                                        sasformat_name = '0', )
                                    ], 
                                imputation_method = [
                                    rcc.models.od_mcomplex_type_definition_imputation_method.ODMcomplexTypeDefinitionImputationMethod(
                                        value = '0', 
                                        oid = '0', )
                                    ], 
                                presentation = [
                                    rcc.models.od_mcomplex_type_definition_presentation.ODMcomplexTypeDefinitionPresentation(
                                        value = '0', 
                                        oid = '0', 
                                        lang = '0', )
                                    ], 
                                condition_def = [
                                    rcc.models.od_mcomplex_type_definition_condition_def.ODMcomplexTypeDefinitionConditionDef(
                                        description = rcc.models.od_mcomplex_type_definition_description.ODMcomplexTypeDefinitionDescription(
                                            translated_text = [
                                                rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                    value = '0', 
                                                    lang = '0', )
                                                ], ), 
                                        oid = '0', 
                                        name = '0', )
                                    ], 
                                method_def = [
                                    rcc.models.od_mcomplex_type_definition_method_def.ODMcomplexTypeDefinitionMethodDef(
                                        description = rcc.models.od_mcomplex_type_definition_description.ODMcomplexTypeDefinitionDescription(
                                            translated_text = [
                                                rcc.models.od_mcomplex_type_definition_translated_text.ODMcomplexTypeDefinitionTranslatedText(
                                                    value = '0', 
                                                    lang = '0', )
                                                ], ), 
                                        oid = '0', 
                                        name = '0', 
                                        type = 'COMPUTATION', )
                                    ], 
                                oid = '0', 
                                name = '0', 
                                description = '0', )
                            ], 
                        oid = '0', 
                        study_export_options = rcc.models.study_export_options.StudyExportOptions(
                            export_entity_types = '0', 
                            sdmversion = '0', ), 
                        study_parameters = rcc.models.study_parameters.StudyParameters(
                            study_parameter = [
                                rcc.models.study_parameter.StudyParameter(
                                    name = '0', 
                                    value = '0', )
                                ], ), 
                        available_crf_languages = rcc.models.available_crf_languages.AvailableCrfLanguages(), 
                        sequence_parameters = rcc.models.sequence_parameters.SequenceParameters(
                            sequence_parameter = [
                                rcc.models.sequence_parameter.SequenceParameter(
                                    sequense_type = '0', 
                                    field = '0', 
                                    value = '0', 
                                    sequence = 56, 
                                    key = '0', 
                                    value_start_from = 56, )
                                ], ), 
                        study_sequences = rcc.models.study_sequences.StudySequences(
                            study_sequence = [
                                rcc.models.study_sequence.StudySequence(
                                    entity_type = '0', 
                                    next_available_sequence = 56, 
                                    site_oid = '0', )
                                ], ), 
                        study_rules = rcc.models.study_rules.StudyRules(
                            rule = [
                                rcc.models.rule.Rule(
                                    rule_target_section = [
                                        rcc.models.rule_target_section.RuleTargetSection(
                                            name = '0', 
                                            crf_name = '0', 
                                            crf_version = '0', )
                                        ], 
                                    rule_target_event = [
                                        rcc.models.rule_target_event.RuleTargetEvent(
                                            name = '0', )
                                        ], 
                                    name = '0', 
                                    target_item_var_name = '0', 
                                    expression = '0', 
                                    enabled = True, 
                                    display_sequence = 56, 
                                    action = 56, 
                                    item_metadata_oid = '0', 
                                    action_message = '0', 
                                    action_addresses = '0', 
                                    email_subject = '0', 
                                    secondary_act_email = '0', 
                                    target_event_name = '0', 
                                    destination_event_name = '0', 
                                    destination_crf_name = '0', 
                                    add_repeating_crf_message = '0', 
                                    assign_role_name = '0', 
                                    assign_user_name = '0', 
                                    add_dynamic_form_to_one_occurrence = True, )
                                ], ), 
                        study_details = rcc.models.study_details.StudyDetails(
                            name = '0', 
                            unique_identifier = '0', 
                            category = '0', 
                            brief_title = '0', 
                            status = '0', 
                            study_version = '0', 
                            official_title = '0', 
                            secondary_ids = '0', 
                            summary = '0', 
                            protocol_id = '0', 
                            detailed_description = '0', 
                            sponsor = '0', 
                            collaborators = '0', 
                            screening_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            study_phase = '0', 
                            protocol_verification_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            study_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            study_completion_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            purpose = '0', 
                            allocation = '0', 
                            masking = '0', 
                            control = '0', 
                            intervention_model = '0', 
                            study_classification = '0', 
                            duration = '0', 
                            selection = '0', 
                            timing = '0', 
                            study_type = '0', 
                            gender = '0', 
                            principal_investigator = '0', 
                            info = '0', 
                            conditions = '0', 
                            keywords = '0', 
                            eligibility_criteria = '0', 
                            minimum_age = 56, 
                            maximum_age = 56, 
                            healthy_volunteer_accepted = True, 
                            expected_total_enrollment = 56, 
                            facility_name = '0', 
                            facility_city = '0', 
                            facility_state = '0', 
                            facility_zip = '0', 
                            facility_country = '0', 
                            facility_contact_name = '0', 
                            facility_contact_degree = '0', 
                            facility_contact_phone = '0', 
                            facility_contact_email = '0', 
                            medline_identifier = '0', 
                            result_referense = True, 
                            url_reference = '0', 
                            url_description = '0', 
                            branding_logo = '0', 
                            branding_logo_file_name = '0', 
                            branding_logo_content_type = '0', 
                            pdf_footnote = '0', 
                            help_desk = '0', ), 
                        study_keywords = rcc.models.study_keywords.StudyKeywords(
                            study_keyword = [
                                rcc.models.study_keyword.StudyKeyword(
                                    study_keyword_value = [
                                        rcc.models.study_keyword_value.StudyKeywordValue(
                                            language = '0', 
                                            language_code = '0', 
                                            language_name = '0', 
                                            translation = '0', )
                                        ], 
                                    keyword = '0', )
                                ], ), 
                        study_groups = rcc.models.study_groups.StudyGroups(
                            study_group = [
                                rcc.models.study_group.StudyGroup(
                                    study_group_value = [
                                        rcc.models.study_group_value.StudyGroupValue(
                                            name = '0', )
                                        ], 
                                    study_group_event = [
                                        rcc.models.study_group_event.StudyGroupEvent(
                                            name = '0', 
                                            oid = '0', )
                                        ], 
                                    name = '0', 
                                    group_type = '0', 
                                    planned_size = 56, )
                                ], ), 
                        study_permissions = rcc.models.study_permissions.StudyPermissions(
                            study_component = [
                                rcc.models.study_component.StudyComponent(
                                    name = '0', 
                                    oid = '0', )
                                ], 
                            study_role = [
                                rcc.models.study_role.StudyRole(
                                    role_component_permission = [
                                        rcc.models.role_component_permission.RoleComponentPermission(
                                            permission_id = [
                                                rcc.models.permission_id.PermissionId(
                                                    permission_type = 56, 
                                                    allowed = True, )
                                                ], 
                                            component = '0', 
                                            component_oid = '0', )
                                        ], 
                                    name = '0', 
                                    object_data = '0', 
                                    enabled = True, 
                                    use_classical_menu = True, )
                                ], ), 
                        surveys = rcc.models.surveys.Surveys(
                            survey = [
                                rcc.models.survey.Survey(
                                    survey_link = [
                                        rcc.models.survey_link.SurveyLink(
                                            subject_oid = '0', 
                                            subject_id = '0', 
                                            study_event_definition_oid = '0', 
                                            event_name = '0', 
                                            crf_oid = '0', 
                                            crf_name = '0', 
                                            crf_version_oid = '0', 
                                            code = '0', 
                                            failed_attempts = 56, 
                                            locked_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            preview_only = 56, 
                                            public_survey = 56, 
                                            site_oid = '0', 
                                            recent = 56, )
                                        ], 
                                    survey_queue = [
                                        rcc.models.survey_queue.SurveyQueue(
                                            study_event_definition_oid = '0', 
                                            active = 56, 
                                            auto_start = 56, 
                                            condition_surveycomplete_survey_oid = '0', 
                                            condition_surveycomplete_event_oid = '0', 
                                            condition_andor_code = '0', 
                                            condition_logic = '0', )
                                        ], 
                                    survey_scheduler = [
                                        rcc.models.survey_scheduler.SurveyScheduler(
                                            study_event_definition_oid = '0', 
                                            active = 56, 
                                            email_subject = '0', 
                                            email_content = '0', 
                                            email_sender = '0', 
                                            condition_surveycomplete_survey_oid = '0', 
                                            condition_surveycomplete_event_oid = '0', 
                                            condition_andor_code = '0', 
                                            condition_logic = '0', 
                                            condition_send_time_option_code = '0', 
                                            condition_send_time_lag_days = 56, 
                                            condition_send_time_lag_hours = 56, 
                                            condition_send_time_lag_minutes = 56, 
                                            condition_send_next_day_type_code = '0', 
                                            condition_send_next_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            condition_send_next_time_exact = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            delivery_type = '0', 
                                            reminder_type = '0', 
                                            reminder_time_lag_days = 56, 
                                            reminder_time_lag_hours = 56, 
                                            reminder_time_lag_minutes = 56, 
                                            reminder_next_day_type = '0', 
                                            reminder_next_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            reminder_exact_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            reminder_num = 56, 
                                            survey_duration = 56, )
                                        ], 
                                    survey_logo = rcc.models.file_base64.FileBase64(
                                        value = '0', 
                                        file_name = '0', 
                                        content_type = '0', 
                                        file_size = 56, ), 
                                    survey_confirmation_email_attachment = rcc.models.file_base64.FileBase64(
                                        value = '0', 
                                        file_name = '0', 
                                        content_type = '0', 
                                        file_size = 56, ), 
                                    survey_oid = '0', 
                                    crf_oid = '0', 
                                    crf_name = '0', 
                                    crf_version_oid = '0', 
                                    title = '0', 
                                    instructions = '0', 
                                    acknowledgement = '0', 
                                    question_by_section = 56, 
                                    display_page_number = 56, 
                                    question_auto_numbering = 56, 
                                    survey_enabled = 56, 
                                    save_and_return = 56, 
                                    logo = 56, 
                                    hide_title = 56, 
                                    view_results = 56, 
                                    min_responses_view_results = 56, 
                                    check_diversity_view_results = 56, 
                                    end_survey_redirect_url = '0', 
                                    promis_skip_question = 56, 
                                    survey_auth_enabled_single = 56, 
                                    edit_completed_response = 56, 
                                    hide_back_button = 56, 
                                    show_required_field_text = 56, 
                                    confirmation_email_subject = '0', 
                                    confirmation_email_content = '0', 
                                    confirmation_email_from = '0', 
                                    confirmation_email_attachment = 56, 
                                    identifier = '0', 
                                    send_confirmation_email = 56, 
                                    survey_redirect_message = '0', 
                                    survey_thankyou_message = '0', 
                                    survey_expiration = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    close_survey_after_completion = 56, 
                                    customize_time_availability = 56, 
                                    availability_from_time = '0', 
                                    availability_to_time = '0', 
                                    calendared_invitation_enabled = 56, 
                                    hide_submit = 56, )
                                ], ), 
                        survey_login_configuration = rcc.models.survey_login_configuration.SurveyLoginConfiguration(
                            survey_login_field = [
                                rcc.models.survey_login_field.SurveyLoginField(
                                    study_event_definition_oid = '0', 
                                    item_oid = '0', )
                                ], 
                            login_enabled = 56, 
                            min_required_field_number = 56, 
                            failed_login_attempts_number = 56, 
                            lockout_time = 56, 
                            applicable_surveys_type = '0', 
                            login_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        randomization = rcc.models.randomization.Randomization(
                            randomization_config = [
                                rcc.models.randomization_config.RandomizationConfig(
                                    block_size = 56, 
                                    mimimum_block_size = 56, 
                                    maximum_block_size = 56, 
                                    initial_balls = 56, 
                                    success = 56, 
                                    failure = 56, 
                                    first_option = '0', 
                                    second_option = '0', 
                                    replaced_balls = 56, 
                                    data_oid = '0', 
                                    stratify_study_site = True, 
                                    status = '0', 
                                    algorythm_type = '0', 
                                    block_randomization_type = '0', 
                                    block_randomization_constraint = '0', 
                                    block_history = '0', 
                                    block_history_printout = '0', 
                                    mti = 56, 
                                    probability = 1.337, 
                                    dtype = '0', 
                                    pvalue = 1.337, 
                                    dname = '0', )
                                ], 
                            study_group_randomization = [
                                rcc.models.study_group_randomization.StudyGroupRandomization(
                                    randomization_oid = '0', 
                                    subject = '0', 
                                    study_group_class = '0', 
                                    properties = '0', 
                                    index = 56, )
                                ], 
                            custom_schedule_randomization = [
                                rcc.models.custom_schedule_randomization.CustomScheduleRandomization(
                                    study_group_name = '0', 
                                    site_name = '0', 
                                    subject_number = '0', 
                                    processed = True, )
                                ], 
                            custom_schedule_randomization_mapping = [
                                rcc.models.custom_schedule_randomization_mapping.CustomScheduleRandomizationMapping(
                                    mapping_oid = '0', 
                                    column_name = '0', 
                                    crf_variable_name = '0', 
                                    study_level_variable = '0', 
                                    show_on_ui = True, )
                                ], 
                            custom_schedule_randomization_values = [
                                rcc.models.custom_schedule_randomization_values.CustomScheduleRandomizationValues(
                                    mapping_oid = '0', 
                                    randomization_oid = '0', 
                                    value = '0', 
                                    index = 56, 
                                    processed = True, )
                                ], ), 
                        study_dictionaries = rcc.models.study_dictionaries.StudyDictionaries(
                            study_dictionary = [
                                rcc.models.study_dictionary.StudyDictionary(
                                    study_dictionary_oid = '0', 
                                    enable_site_coding = True, 
                                    enable_auto_coding = True, 
                                    dictionary_version_oid = '0', 
                                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    version_enabled = True, 
                                    license_agreement = '0', 
                                    lic_agrement_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    lic_verify_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    notes = '0', 
                                    dictionary_oid = '0', 
                                    dictionary_notes = '0', 
                                    dictionary_enabled = True, 
                                    customer_contact = '0', 
                                    dictionary_disabled_verbatim = True, 
                                    ref_dictionary_version_oid = '0', 
                                    ref_dictionary_version_number = '0', 
                                    ref_dictionary_version_release_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ref_dictionary_version_upload_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ref_dictionary_version_enabled = True, 
                                    medical_dictionary_version_id = 56, 
                                    ref_dictionary_oid = '0', 
                                    ref_dictionary_name = '0', 
                                    ref_dictionary_description = '0', 
                                    ref_dictionary_enabled = True, 
                                    ref_dictionary_category = '0', 
                                    ref_dictionary_contact = '0', 
                                    ref_dictionary_web_page = '0', 
                                    ref_dictionary_license_info = '0', 
                                    ref_dictionary_search_error_message = '0', )
                                ], ), 
                        limited_cr_fs_by_roles = rcc.models.limited_cr_fs_by_roles.LimitedCRFsByRoles(
                            crfname_role_name_pair = [
                                rcc.models.crf_name_role_name_pair.CRFNameRoleNamePair(
                                    crf_name = '0', 
                                    role_name = '0', 
                                    read = True, 
                                    update = True, )
                                ], ), 
                        migration_plans = rcc.models.migration_plans.MigrationPlans(
                            migration_plan = [
                                rcc.models.migration_plan.MigrationPlan(
                                    migration_branching_logic = [
                                        rcc.models.migration_branching_logic.MigrationBranchingLogic(
                                            item_metadata_oid = '0', 
                                            branching_equation = '0', 
                                            reason = '0', 
                                            violation_source = '0', )
                                        ], 
                                    migration_calculated_fields = [
                                        rcc.models.migration_calculated_fields.MigrationCalculatedFields(
                                            item_metadata_oid = '0', 
                                            calculated_field_expression = '0', 
                                            reason = '0', 
                                            violation_source = '0', )
                                        ], 
                                    migration_cr_fs = [
                                        rcc.models.migration_cr_fs.MigrationCRFs(
                                            origin_event_oid = '0', 
                                            origin_crf_version_oid = '0', 
                                            destination_crf_version_oid = '0', )
                                        ], 
                                    migration_events = [
                                        rcc.models.migration_events.MigrationEvents(
                                            not_migrated_event_oid = '0', )
                                        ], 
                                    migration_mapped_items = [
                                        rcc.models.migration_mapped_items.MigrationMappedItems(
                                            item_metadata_oid = '0', 
                                            mapping_expression = '0', )
                                        ], 
                                    migration_obsolete_cr_fs = [
                                        rcc.models.migration_obsolete_cr_fs.MigrationObsoleteCRFs(
                                            origin_event_oid = '0', 
                                            obsolete_crf_version_oid = '0', )
                                        ], 
                                    migration_obsolete_items = [
                                        rcc.models.migration_obsolete_items.MigrationObsoleteItems(
                                            item_metadata_oid = '0', )
                                        ], 
                                    migration_plan_subjects = [
                                        rcc.models.migration_plan_subjects.MigrationPlanSubjects(
                                            subject_oid = '0', )
                                        ], 
                                    migration_resolved_branching_logic = [
                                        rcc.models.migration_resolved_branching_logic.MigrationResolvedBranchingLogic(
                                            item_metadata_oid = '0', 
                                            branching_equation = '0', )
                                        ], 
                                    migration_resolved_calculated_fields = [
                                        rcc.models.migration_resolved_calculated_fields.MigrationResolvedCalculatedFields(
                                            item_metadata_oid = '0', 
                                            calculated_equation = '0', )
                                        ], 
                                    migration_soft_validation_items = [
                                        rcc.models.migration_soft_validation_items.MigrationSoftValidationItems(
                                            item_metadata_oid = '0', 
                                            bypass_comment = '0', 
                                            bypassed = True, )
                                        ], 
                                    migration_subjects = [
                                        rcc.models.migration_subjects.MigrationSubjects(
                                            subject_oid = '0', 
                                            status = '0', )
                                        ], 
                                    migration_violations = [
                                        rcc.models.migration_violations.MigrationViolations(
                                            origin_item_metadata_oid = '0', 
                                            target_item_metadata_oid = '0', 
                                            violation = '0', 
                                            violation_factor = '0', 
                                            details = '0', )
                                        ], 
                                    migration_sites = [
                                        rcc.models.migration_sites.MigrationSites(
                                            site_oid = '0', )
                                        ], 
                                    title = '0', 
                                    status = 56, 
                                    migration_subject_option_code = '0', 
                                    condition_send_time_option_code = '0', 
                                    condition_send_time_lag_days = 56, 
                                    condition_send_time_lag_hours = 56, 
                                    condition_send_time_lag_minutes = 56, 
                                    condition_send_next_day_type_code = '0', 
                                    condition_send_next_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    condition_send_next_time_exact = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    subject_number = 56, 
                                    owner = '0', 
                                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], ), 
                        cogstate_battery_notifications = rcc.models.cogstate_battery_notifications.CogstateBatteryNotifications(), )
                    ], 
                admin_data = [
                    rcc.models.od_mcomplex_type_definition_admin_data.ODMcomplexTypeDefinitionAdminData(
                        user = [
                            rcc.models.od_mcomplex_type_definition_user.ODMcomplexTypeDefinitionUser(
                                login_name = rcc.models.od_mcomplex_type_definition_login_name.ODMcomplexTypeDefinitionLoginName(
                                    value = '0', ), 
                                display_name = rcc.models.od_mcomplex_type_definition_display_name.ODMcomplexTypeDefinitionDisplayName(
                                    value = '0', ), 
                                full_name = rcc.models.od_mcomplex_type_definition_full_name.ODMcomplexTypeDefinitionFullName(
                                    value = '0', ), 
                                first_name = rcc.models.od_mcomplex_type_definition_first_name.ODMcomplexTypeDefinitionFirstName(
                                    value = '0', ), 
                                last_name = rcc.models.od_mcomplex_type_definition_last_name.ODMcomplexTypeDefinitionLastName(
                                    value = '0', ), 
                                organization = rcc.models.od_mcomplex_type_definition_organization.ODMcomplexTypeDefinitionOrganization(
                                    value = '0', ), 
                                address = [
                                    rcc.models.od_mcomplex_type_definition_address.ODMcomplexTypeDefinitionAddress(
                                        street_name = [
                                            rcc.models.od_mcomplex_type_definition_street_name.ODMcomplexTypeDefinitionStreetName(
                                                value = '0', )
                                            ], 
                                        city = rcc.models.od_mcomplex_type_definition_city.ODMcomplexTypeDefinitionCity(
                                            value = '0', ), 
                                        state_prov = rcc.models.od_mcomplex_type_definition_state_prov.ODMcomplexTypeDefinitionStateProv(
                                            value = '0', ), 
                                        country = rcc.models.od_mcomplex_type_definition_country.ODMcomplexTypeDefinitionCountry(
                                            value = '0', ), 
                                        postal_code = rcc.models.od_mcomplex_type_definition_postal_code.ODMcomplexTypeDefinitionPostalCode(
                                            value = '0', ), 
                                        other_text = rcc.models.od_mcomplex_type_definition_other_text.ODMcomplexTypeDefinitionOtherText(
                                            value = '0', ), )
                                    ], 
                                email = [
                                    rcc.models.od_mcomplex_type_definition_email.ODMcomplexTypeDefinitionEmail(
                                        value = '0', )
                                    ], 
                                picture = rcc.models.od_mcomplex_type_definition_picture.ODMcomplexTypeDefinitionPicture(
                                    picture_file_name = '0', 
                                    image_type = '0', ), 
                                pager = rcc.models.od_mcomplex_type_definition_pager.ODMcomplexTypeDefinitionPager(
                                    value = '0', ), 
                                fax = [
                                    rcc.models.od_mcomplex_type_definition_fax.ODMcomplexTypeDefinitionFax(
                                        value = '0', )
                                    ], 
                                phone = [
                                    rcc.models.od_mcomplex_type_definition_phone.ODMcomplexTypeDefinitionPhone(
                                        value = '0', )
                                    ], 
                                location_ref = [
                                    rcc.models.od_mcomplex_type_definition_location_ref.ODMcomplexTypeDefinitionLocationRef(
                                        location_oid = '0', )
                                    ], 
                                certificate = [
                                    rcc.models.od_mcomplex_type_definition_certificate.ODMcomplexTypeDefinitionCertificate(
                                        value = '0', )
                                    ], 
                                oid = '0', 
                                user_type = 'SPONSOR', )
                            ], 
                        location = [
                            rcc.models.od_mcomplex_type_definition_location.ODMcomplexTypeDefinitionLocation(
                                meta_data_version_ref = [
                                    rcc.models.od_mcomplex_type_definition_meta_data_version_ref.ODMcomplexTypeDefinitionMetaDataVersionRef(
                                        study_oid = '0', 
                                        meta_data_version_oid = '0', 
                                        effective_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                oid = '0', 
                                name = '0', 
                                location_type = 'SPONSOR', )
                            ], 
                        signature_def = [
                            rcc.models.od_mcomplex_type_definition_signature_def.ODMcomplexTypeDefinitionSignatureDef(
                                meaning = rcc.models.od_mcomplex_type_definition_meaning.ODMcomplexTypeDefinitionMeaning(
                                    value = '0', ), 
                                legal_reason = rcc.models.od_mcomplex_type_definition_legal_reason.ODMcomplexTypeDefinitionLegalReason(
                                    value = '0', ), 
                                oid = '0', 
                                methodology = 'DIGITAL', )
                            ], 
                        study_oid = '0', )
                    ], 
                reference_data = [
                    rcc.models.od_mcomplex_type_definition_reference_data.ODMcomplexTypeDefinitionReferenceData(
                        item_group_data = [
                            rcc.models.od_mcomplex_type_definition_item_group_data.ODMcomplexTypeDefinitionItemGroupData(
                                audit_record = rcc.models.od_mcomplex_type_definition_audit_record.ODMcomplexTypeDefinitionAuditRecord(
                                    user_ref = rcc.models.od_mcomplex_type_definition_user_ref.ODMcomplexTypeDefinitionUserRef(
                                        user_oid = '0', ), 
                                    location_ref = rcc.models.od_mcomplex_type_definition_location_ref.ODMcomplexTypeDefinitionLocationRef(
                                        location_oid = '0', ), 
                                    date_time_stamp = rcc.models.od_mcomplex_type_definition_date_time_stamp.ODMcomplexTypeDefinitionDateTimeStamp(
                                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    reason_for_change = rcc.models.od_mcomplex_type_definition_reason_for_change.ODMcomplexTypeDefinitionReasonForChange(
                                        value = '0', ), 
                                    source_id = rcc.models.od_mcomplex_type_definition_source_id.ODMcomplexTypeDefinitionSourceID(
                                        value = '0', ), 
                                    edit_point = 'MONITORING', 
                                    used_imputation_method = 'YES', 
                                    id = '0', ), 
                                signature = rcc.models.od_mcomplex_type_definition_signature.ODMcomplexTypeDefinitionSignature(
                                    user_ref = rcc.models.od_mcomplex_type_definition_user_ref.ODMcomplexTypeDefinitionUserRef(
                                        user_oid = '0', ), 
                                    location_ref = rcc.models.od_mcomplex_type_definition_location_ref.ODMcomplexTypeDefinitionLocationRef(
                                        location_oid = '0', ), 
                                    signature_ref = rcc.models.od_mcomplex_type_definition_signature_ref.ODMcomplexTypeDefinitionSignatureRef(
                                        signature_oid = '0', ), 
                                    date_time_stamp = rcc.models.od_mcomplex_type_definition_date_time_stamp.ODMcomplexTypeDefinitionDateTimeStamp(
                                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    crypto_binding_manifest = rcc.models.od_mcomplex_type_definition_crypto_binding_manifest.ODMcomplexTypeDefinitionCryptoBindingManifest(
                                        value = '0', ), 
                                    id = '0', ), 
                                annotation = [
                                    rcc.models.od_mcomplex_type_definition_annotation.ODMcomplexTypeDefinitionAnnotation(
                                        comment = rcc.models.od_mcomplex_type_definition_comment.ODMcomplexTypeDefinitionComment(
                                            value = '0', 
                                            sponsor_or_site = 'SPONSOR', ), 
                                        flag = [
                                            rcc.models.od_mcomplex_type_definition_flag.ODMcomplexTypeDefinitionFlag(
                                                flag_value = rcc.models.od_mcomplex_type_definition_flag_value.ODMcomplexTypeDefinitionFlagValue(
                                                    value = '0', 
                                                    code_list_oid = '0', ), 
                                                flag_type = rcc.models.od_mcomplex_type_definition_flag_type.ODMcomplexTypeDefinitionFlagType(
                                                    value = '0', 
                                                    code_list_oid = '0', ), )
                                            ], 
                                        seq_num = 56, 
                                        transaction_type = 'INSERT', 
                                        id = '0', )
                                    ], 
                                item_data_group = [
                                    rcc.models.od_mcomplex_type_definition_item_data.ODMcomplexTypeDefinitionItemData(
                                        measurement_unit_ref = rcc.models.od_mcomplex_type_definition_measurement_unit_ref.ODMcomplexTypeDefinitionMeasurementUnitRef(
                                            measurement_unit_oid = '0', ), 
                                        item_oid = '0', 
                                        transaction_type = 'INSERT', 
                                        is_null = 'YES', 
                                        value = '0', 
                                        updated_by = '0', 
                                        updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        sdv = True, 
                                        mrv = True, 
                                        drv = True, 
                                        sdvby = '0', 
                                        sdvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        mrvby = '0', 
                                        mrvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        drvby = '0', 
                                        drvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                item_data_star_group = [
                                    None
                                    ], 
                                item_group_oid = '0', 
                                item_group_repeat_key = '0', 
                                transaction_type = 'INSERT', )
                            ], 
                        audit_records = [
                            rcc.models.od_mcomplex_type_definition_audit_records.ODMcomplexTypeDefinitionAuditRecords()
                            ], 
                        signatures = [
                            rcc.models.od_mcomplex_type_definition_signatures.ODMcomplexTypeDefinitionSignatures()
                            ], 
                        annotations = [
                            rcc.models.od_mcomplex_type_definition_annotations.ODMcomplexTypeDefinitionAnnotations()
                            ], 
                        study_oid = '0', 
                        meta_data_version_oid = '0', )
                    ], 
                clinical_data = [
                    rcc.models.od_mcomplex_type_definition_clinical_data.ODMcomplexTypeDefinitionClinicalData(
                        subject_data = [
                            rcc.models.od_mcomplex_type_definition_subject_data.ODMcomplexTypeDefinitionSubjectData(
                                audit_record = rcc.models.od_mcomplex_type_definition_audit_record.ODMcomplexTypeDefinitionAuditRecord(
                                    user_ref = rcc.models.od_mcomplex_type_definition_user_ref.ODMcomplexTypeDefinitionUserRef(
                                        user_oid = '0', ), 
                                    location_ref = rcc.models.od_mcomplex_type_definition_location_ref.ODMcomplexTypeDefinitionLocationRef(
                                        location_oid = '0', ), 
                                    date_time_stamp = rcc.models.od_mcomplex_type_definition_date_time_stamp.ODMcomplexTypeDefinitionDateTimeStamp(
                                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    reason_for_change = rcc.models.od_mcomplex_type_definition_reason_for_change.ODMcomplexTypeDefinitionReasonForChange(
                                        value = '0', ), 
                                    source_id = rcc.models.od_mcomplex_type_definition_source_id.ODMcomplexTypeDefinitionSourceID(
                                        value = '0', ), 
                                    edit_point = 'MONITORING', 
                                    used_imputation_method = 'YES', 
                                    id = '0', ), 
                                signature = rcc.models.od_mcomplex_type_definition_signature.ODMcomplexTypeDefinitionSignature(
                                    user_ref = rcc.models.od_mcomplex_type_definition_user_ref.ODMcomplexTypeDefinitionUserRef(
                                        user_oid = '0', ), 
                                    location_ref = rcc.models.od_mcomplex_type_definition_location_ref.ODMcomplexTypeDefinitionLocationRef(
                                        location_oid = '0', ), 
                                    signature_ref = rcc.models.od_mcomplex_type_definition_signature_ref.ODMcomplexTypeDefinitionSignatureRef(
                                        signature_oid = '0', ), 
                                    date_time_stamp = rcc.models.od_mcomplex_type_definition_date_time_stamp.ODMcomplexTypeDefinitionDateTimeStamp(
                                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    crypto_binding_manifest = rcc.models.od_mcomplex_type_definition_crypto_binding_manifest.ODMcomplexTypeDefinitionCryptoBindingManifest(
                                        value = '0', ), 
                                    id = '0', ), 
                                investigator_ref = rcc.models.od_mcomplex_type_definition_investigator_ref.ODMcomplexTypeDefinitionInvestigatorRef(
                                    user_oid = '0', ), 
                                site_ref = rcc.models.od_mcomplex_type_definition_site_ref.ODMcomplexTypeDefinitionSiteRef(
                                    location_oid = '0', ), 
                                annotation = [
                                    rcc.models.od_mcomplex_type_definition_annotation.ODMcomplexTypeDefinitionAnnotation(
                                        comment = rcc.models.od_mcomplex_type_definition_comment.ODMcomplexTypeDefinitionComment(
                                            value = '0', 
                                            sponsor_or_site = 'SPONSOR', ), 
                                        flag = [
                                            rcc.models.od_mcomplex_type_definition_flag.ODMcomplexTypeDefinitionFlag(
                                                flag_value = rcc.models.od_mcomplex_type_definition_flag_value.ODMcomplexTypeDefinitionFlagValue(
                                                    value = '0', 
                                                    code_list_oid = '0', ), 
                                                flag_type = rcc.models.od_mcomplex_type_definition_flag_type.ODMcomplexTypeDefinitionFlagType(
                                                    value = '0', 
                                                    code_list_oid = '0', ), )
                                            ], 
                                        seq_num = 56, 
                                        transaction_type = 'INSERT', 
                                        id = '0', )
                                    ], 
                                study_event_data = [
                                    rcc.models.od_mcomplex_type_definition_study_event_data.ODMcomplexTypeDefinitionStudyEventData(
                                        form_data = [
                                            rcc.models.od_mcomplex_type_definition_form_data.ODMcomplexTypeDefinitionFormData(
                                                archive_layout_ref = rcc.models.od_mcomplex_type_definition_archive_layout_ref.ODMcomplexTypeDefinitionArchiveLayoutRef(
                                                    archive_layout_oid = '0', ), 
                                                item_group_data = [
                                                    rcc.models.od_mcomplex_type_definition_item_group_data.ODMcomplexTypeDefinitionItemGroupData(
                                                        item_data_group = [
                                                            rcc.models.od_mcomplex_type_definition_item_data.ODMcomplexTypeDefinitionItemData(
                                                                measurement_unit_ref = rcc.models.od_mcomplex_type_definition_measurement_unit_ref.ODMcomplexTypeDefinitionMeasurementUnitRef(
                                                                    measurement_unit_oid = '0', ), 
                                                                item_oid = '0', 
                                                                transaction_type = 'INSERT', 
                                                                is_null = 'YES', 
                                                                value = '0', 
                                                                updated_by = '0', 
                                                                updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                                sdv = True, 
                                                                mrv = True, 
                                                                drv = True, 
                                                                sdvby = '0', 
                                                                sdvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                                mrvby = '0', 
                                                                mrvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                                drvby = '0', 
                                                                drvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                            ], 
                                                        item_data_star_group = [
                                                            None
                                                            ], 
                                                        item_group_oid = '0', 
                                                        item_group_repeat_key = '0', 
                                                        transaction_type = 'INSERT', )
                                                    ], 
                                                updated_by = '0', 
                                                updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                sdv = True, 
                                                mrv = True, 
                                                drv = True, 
                                                status = '0', 
                                                states_history = '0', 
                                                form_oid = '0', 
                                                form_repeat_key = '0', 
                                                transaction_type = 'INSERT', 
                                                sdvby = '0', 
                                                sdvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                mrvby = '0', 
                                                mrvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                drvby = '0', 
                                                drvdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                desby = '0', 
                                                desdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                decby = '0', 
                                                decdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], 
                                        unique_event_name = '0', 
                                        status = '0', 
                                        states_history = '0', 
                                        event_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        study_event_oid = '0', 
                                        study_event_repeat_key = '0', 
                                        transaction_type = 'INSERT', )
                                    ], 
                                subject_key = '0', 
                                transaction_type = 'INSERT', 
                                study_subject_id = '0', 
                                subject_screening_number = '0', 
                                subject_creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                subject_screening_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                study_group_name = '0', 
                                study_subject_initials = '0', 
                                study_subject_date_of_birth = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                study_subject_email = '0', 
                                screening_failure_notes = '0', 
                                enrollment_failure_notes = '0', 
                                enrollment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                latest_reassignment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                status = '0', 
                                states_history = '0', 
                                dynamic_group_class = '0', 
                                patient_identifier = '0', 
                                engage_uuid = '0', 
                                form_name = '0', 
                                custom_enroll_crf = True, 
                                screening_crf_passed = '0', 
                                enrollment_confirmed = '0', 
                                study_events = rcc.models.study_events.StudyEvents(
                                    study_event = [
                                        rcc.models.study_event.StudyEvent(
                                            study_event_crf = [
                                                rcc.models.study_event_crf.StudyEventCrf(
                                                    crf_version_oid = '0', 
                                                    date_interviewed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    interviewer_name = '0', 
                                                    status_code = '0', 
                                                    annotations = '0', 
                                                    validator_annotations = '0', 
                                                    validate_string = '0', 
                                                    owner = '0', 
                                                    date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    date_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    electronic_signature_status = True, 
                                                    lock_status = True, 
                                                    date_completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    date_dde_started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    date_dde_completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    date_sdv = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    medical_reviwed_by_id = '0', 
                                                    medical_reviwed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    medical_reviwed_status = True, 
                                                    medical_review_comment = '0', 
                                                    study_reviwed_by_id = '0', 
                                                    study_reviwed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    study_reviwed_status = True, 
                                                    study_review_comment = '0', 
                                                    disable_trigger = True, 
                                                    signature_history = True, 
                                                    signature_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    signature_owner = '0', 
                                                    states = '0', 
                                                    date_de_started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    migration_locked = True, 
                                                    sdvcomment = '0', 
                                                    ddecompleted_by_id = '0', 
                                                    destarted_by_id = '0', )
                                                ], 
                                            subject_oid = '0', 
                                            event_definition_oid = '0', 
                                            location = '0', 
                                            occurence = 56, 
                                            date_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            date_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            status = '0', 
                                            start_time_flag = True, 
                                            end_time_flag = True, 
                                            reference_visit_oid = '0', 
                                            signature_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            signature_owner = '0', 
                                            signature_history = True, 
                                            states = '0', 
                                            study_event_oid = '0', 
                                            repeating_form_parent_oid = '0', 
                                            migration_locked = True, )
                                        ], ), 
                                econsent_status = '0', 
                                crfversion = '0', 
                                econsent_screening_crf_passed = '0', )
                            ], 
                        audit_records = [
                            rcc.models.od_mcomplex_type_definition_audit_records.ODMcomplexTypeDefinitionAuditRecords()
                            ], 
                        signatures = [
                            rcc.models.od_mcomplex_type_definition_signatures.ODMcomplexTypeDefinitionSignatures()
                            ], 
                        annotations = [
                            rcc.models.od_mcomplex_type_definition_annotations.ODMcomplexTypeDefinitionAnnotations()
                            ], 
                        study_oid = '0', 
                        meta_data_version_oid = '0', )
                    ], 
                association = [
                    rcc.models.od_mcomplex_type_definition_association.ODMcomplexTypeDefinitionAssociation(
                        content = [
                            rcc.models.jaxb_element_object.JAXBElementObject(
                                name = rcc.models.q_name.QName(
                                    namespace_uri = '0', 
                                    local_part = '0', 
                                    prefix = '0', ), 
                                value = rcc.models.value.value(), 
                                nil = True, 
                                global_scope = True, 
                                type_substituted = True, )
                            ], 
                        study_oid = '0', 
                        meta_data_version_oid = '0', )
                    ], 
                dig_signature = [
                    rcc.models.signature_type.SignatureType(
                        signed_info = rcc.models.signed_info_type.SignedInfoType(
                            canonicalization_method = rcc.models.canonicalization_method_type.CanonicalizationMethodType(
                                content = [
                                    None
                                    ], 
                                algorithm = '0', ), 
                            signature_method = rcc.models.signature_method_type.SignatureMethodType(
                                algorithm = '0', ), 
                            reference = [
                                rcc.models.reference_type.ReferenceType(
                                    transforms = rcc.models.transforms_type.TransformsType(
                                        transform = [
                                            rcc.models.transform_type.TransformType(
                                                algorithm = '0', )
                                            ], ), 
                                    digest_method = rcc.models.digest_method_type.DigestMethodType(
                                        algorithm = '0', ), 
                                    digest_value = [
                                        'YQ=='
                                        ], 
                                    id = '0', 
                                    uri = '0', 
                                    type = '0', )
                                ], 
                            id = '0', ), 
                        signature_value = rcc.models.signature_value_type.SignatureValueType(
                            value = [
                                'YQ=='
                                ], 
                            id = '0', ), 
                        key_info = rcc.models.key_info_type.KeyInfoType(
                            id = '0', ), 
                        object = [
                            rcc.models.object_type.ObjectType(
                                id = '0', 
                                mime_type = '0', 
                                encoding = '0', )
                            ], 
                        id = '0', )
                    ], 
                description = '0', 
                file_type = 'SNAPSHOT', 
                granularity = 'ALL', 
                archival = 'YES', 
                file_oid = '0', 
                creation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                prior_file_oid = '0', 
                as_of_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                originator = '0', 
                source_system = '0', 
                source_system_version = '0', 
                id = '0', 
                odmversion = '0'
            )
        else :
            return ODM(
        )

    def testODM(self):
        """Test ODM"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
