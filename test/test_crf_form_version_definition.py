# coding: utf-8

"""
    nPhase REST Resource

    REDCap REST API v.2  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcc
from rcc.models.crf_form_version_definition import CRFFormVersionDefinition  # noqa: E501
from rcc.rest import ApiException

class TestCRFFormVersionDefinition(unittest.TestCase):
    """CRFFormVersionDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CRFFormVersionDefinition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcc.models.crf_form_version_definition.CRFFormVersionDefinition()  # noqa: E501
        if include_optional :
            return CRFFormVersionDefinition(
                version_name = '0', 
                revision_notes = '0', 
                version_oid = '0', 
                fields = 56, 
                revision_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                primary_flag = True, 
                disp_sequence = 56, 
                enabled = True, 
                screening_expression = '0', 
                screening_flag = True, 
                custom_enroll_flag = True, 
                used_at_enroll = True, 
                randomization_expression = '0', 
                irb_approval_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                valid_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                screening_e_consent_flag = True, 
                econsent = True, 
                crfform_definition = rcc.models.crf_form_definition.CRFFormDefinition(
                    name = '0', 
                    sas_name = '0', 
                    description = '0', 
                    show_lock = True, 
                    show_esignature = True, 
                    custom_text = '0', 
                    enable_survey = True, 
                    randomization_flag = True, 
                    available_on_mobile = True, 
                    enable_subject_source = True, 
                    dynamic_form = True, 
                    form_type = '0', 
                    promis_form_oid = '0', 
                    enable_phir_integration = True, 
                    available_in_patient_portal = True, ), 
                crfform_section = [
                    rcc.models.crf_form_section_definition.CRFFormSectionDefinition(
                        title = '0', 
                        subtitle = '0', 
                        status = '0', 
                        instructions = '0', 
                        page_number_label = '0', 
                        display_sequence = 56, 
                        borders = 56, 
                        fields_total_width = 56, 
                        fields_label_width = 56, 
                        section_branching_equation = '0', )
                    ]
            )
        else :
            return CRFFormVersionDefinition(
        )

    def testCRFFormVersionDefinition(self):
        """Test CRFFormVersionDefinition"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
